{
	"workflow": {
	  "unique_name": "definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X",
	  "name": "Farsight DNSDB - Get Hostnames Using the Same IP Address",
	  "title": "Farsight DNSDB - Get Hostnames Using the Same IP Address",
	  "type": "generic.workflow",
	  "base_type": "workflow",
	  "variables": [
		{
		  "schema_id": "datatype.secure_string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Farsight API Key",
			"type": "datatype.secure_string",
			"description": "Your Farsight DNSDB API key. See: https://docs.dnsdb.info/dnsdb-api/#authentication",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8H88FV7OSU5Q7LZEodDeLLmDAShd6VEz",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Hostname ",
			"type": "datatype.string",
			"description": "Hostname to search for",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8H8NGNOUI60KPC0nVj2qF6RkqlLBkZhO",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "[]",
			"scope": "output",
			"name": "Hostnames",
			"type": "datatype.string",
			"description": "Hostnames at the same address",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8H92H1PGFC4fVbXBY3E1KQXjyUwruxy8",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "[]",
			"scope": "local",
			"name": "Search Results",
			"type": "datatype.string",
			"description": "Placeholder used to keep track of search results. This will be populated automatically",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8HA44X4HN40mP2dyhYZkN7FoFtBSjBfl",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "?",
			"scope": "local",
			"name": "Time Parameters",
			"type": "datatype.string",
			"description": "Placeholder to build the query string if timestamps are provided. This will be populated automatically",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8HANMTLG3E0YY0qSGvButGjR29OpuAtt",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.date",
		  "properties": {
			"value": "0001-01-01T00:00:00+00:00",
			"scope": "input",
			"name": "Seen After Date",
			"type": "datatype.date",
			"description": "Date after which to search (optional)",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N9GL816Q6361PMRPYCrs6fu8fhvHFzE66",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.date",
		  "properties": {
			"value": "0001-01-01T00:00:00+00:00",
			"scope": "input",
			"name": "Seen Before Date",
			"type": "datatype.date",
			"description": "Date before which to search (optional)",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N9GLZR3242772nYJfcv7fGDHJz5fsWEX2",
		  "object_type": "variable_workflow"
		}
	  ],
	  "properties": {
		"atomic": {
		  "atomic_group": "Farsight DNSDB",
		  "is_atomic": true
		},
		"delete_workflow_instance": false,
		"description": "Searches Farsight DNSDB for hostnames using the same IP address(es) as the hostname provided within the given (optional) timeframe.\n\nTarget: HTTP Endpoint for \"api.dnsdb.info\"\n\nAccount Key: None (uses API key)\n\nSteps:\n[] Check if timestamps were provided and, if so, format them for the query string\n[] Search for each record type in DNSDB:\n[]> Check if the API request succeeded:\n[]>> If it didn't, output an error\n[]>> If it did:\n[]>>> Extract the records and store them in a local variable\n[] Check if there were any results (if not, end the workflow)\n[] Convert the IP addresses to a table\n[] For each IP address:\n[]> Search for hostnames using that IP\n[]> Check if the API request succeeded:\n[]>> If it did, extract the hostnames and update the output variable\n[]>> If it didn't, output an error\n\nMore information about this API: https://docs.dnsdb.info/dnsdb-apiv2/",
		"display_name": "Farsight DNSDB - Get Hostnames Using the Same IP Address",
		"runtime_user": {
		  "override_target_runtime_user": false,
		  "specify_on_workflow_start": false,
		  "target_default": true
		},
		"target": {
		  "target_type": "web-service.endpoint",
		  "specify_on_workflow_start": true
		}
	  },
	  "object_type": "definition_workflow",
	  "actions": [
		{
		  "unique_name": "definition_activity_01N8HBRNN23506IXmIDGbIKHDSwj8bZkWZb",
		  "name": "Condition Block",
		  "title": "Were timestamps provided?",
		  "type": "logic.if_else",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Were timestamps provided?",
			"skip_execution": false
		  },
		  "object_type": "definition_activity",
		  "blocks": [
			{
			  "unique_name": "definition_activity_01N8HBS0DV9SI27XWHXedkROF2hhXnrfSWE",
			  "name": "Condition Branch",
			  "title": "Yes",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": {
					"left_operand": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.input.variable_workflow_01N9GL816Q6361PMRPYCrs6fu8fhvHFzE66$",
					"operator": "ne",
					"right_operand": "0001-01-01T00:00:00+00:00"
				  },
				  "operator": "or",
				  "right_operand": {
					"left_operand": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.input.variable_workflow_01N9GLZR3242772nYJfcv7fGDHJz5fsWEX2$",
					"operator": "ne",
					"right_operand": "0001-01-01T00:00:00+00:00"
				  }
				},
				"continue_on_failure": false,
				"display_name": "Yes",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01N8HD83IVEJF0pPNgjLZwDyb0HLjcxoOi1",
				  "name": "Execute Python Script",
				  "title": "Format timestamps",
				  "type": "python3.script",
				  "base_type": "activity",
				  "properties": {
					"action_timeout": 180,
					"continue_on_failure": false,
					"display_name": "Format timestamps",
					"script": "import sys\nfrom datetime import datetime\nparameters = \"?\"\nif sys.argv[1] != \"0001-01-01T00:00:00+00:00\":\n\tparameters += \"time_last_after=\" + datetime.fromisoformat(sys.argv[1]).strftime('%s') + \"&\"\nif sys.argv[2] != \"0001-01-01T00:00:00+00:00\":\n\tparameters += \"time_last_before=\" + datetime.fromisoformat(sys.argv[2]).strftime('%s')",
					"script_arguments": [
					  "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.input.variable_workflow_01N9GL816Q6361PMRPYCrs6fu8fhvHFzE66$",
					  "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.input.variable_workflow_01N9GLZR3242772nYJfcv7fGDHJz5fsWEX2$"
					],
					"script_queries": [
					  {
						"script_query": "parametr",
						"script_query_name": "parametr",
						"script_query_type": "string"
					  }
					],
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				},
				{
				  "unique_name": "definition_activity_01N8HEOO1YAYH7GazT66xd7D0G41uMU76Zv",
				  "name": "Set Variables",
				  "title": "Set local variable",
				  "type": "core.set_multiple_variables",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Set local variable",
					"skip_execution": false,
					"variables_to_update": [
					  {
						"variable_to_update": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.local.variable_workflow_01N8HANMTLG3E0YY0qSGvButGjR29OpuAtt$",
						"variable_value_new": "$activity.definition_activity_01N8HD83IVEJF0pPNgjLZwDyb0HLjcxoOi1.output.script_queries.parametr$"
					  }
					]
				  },
				  "object_type": "definition_activity"
				}
			  ]
			}
		  ]
		},
		{
		  "unique_name": "definition_activity_01QQUQEB4VX3A680unPkZoJBv89hema6MnI",
		  "name": "Split String",
		  "title": "Split string to table",
		  "type": "core.splitstring",
		  "base_type": "activity",
		  "properties": {
			"boundaries": [
			  {
				"boundary": "|"
			  }
			],
			"continue_on_failure": false,
			"display_name": "Split string to table",
			"input_string": "A|AAAA",
			"skip_execution": false
		  },
		  "object_type": "definition_activity"
		},
		{
		  "unique_name": "definition_activity_01N8HFNHHLVDH5Gq7ar6YhWBVCWLMA1sUmb",
		  "name": "For Each",
		  "title": "For each record type",
		  "type": "logic.for_each",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "For each record type",
			"skip_execution": false,
			"source_array": "$activity.definition_activity_01QQUQEB4VX3A680unPkZoJBv89hema6MnI.output.parts$"
		  },
		  "object_type": "definition_activity",
		  "actions": [
			{
			  "unique_name": "definition_activity_01N8HGKVTR34T463zPkPT4oYgYzgAHvTyMw",
			  "name": "HTTP Request",
			  "title": "Search for records",
			  "type": "web-service.http_request",
			  "base_type": "activity",
			  "properties": {
				"accept": "application/x-ndjson",
				"action_timeout": 180,
				"allow_auto_redirect": true,
				"continue_on_error_status_code": true,
				"continue_on_failure": false,
				"custom_headers": [
				  {
					"name": "X-API-Key",
					"value": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.input.variable_workflow_01N8H88FV7OSU5Q7LZEodDeLLmDAShd6VEz$"
				  }
				],
				"display_name": "Search for records",
				"method": "GET",
				"relative_url": "dnsdb/v2/lookup/rrset/name/$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.input.variable_workflow_01N8H8NGNOUI60KPC0nVj2qF6RkqlLBkZhO$/$activity.definition_activity_01N8HFNHHLVDH5Gq7ar6YhWBVCWLMA1sUmb.input.source_array[@]$",
				"runtime_user": {
				  "override_target_runtime_user": false,
				  "target_default": true
				},
				"skip_execution": false,
				"target": {
				  "override_workflow_target": false,
				  "override_workflow_target_group_criteria": false,
				  "use_workflow_target": true,
				  "use_workflow_target_group": false
				}
			  },
			  "object_type": "definition_activity"
			},
			{
			  "unique_name": "definition_activity_01N8HO1JOQBYE5XVSw79wXiRb3LzDUtukiK",
			  "name": "Condition Block",
			  "title": "Was the request successful?",
			  "type": "logic.if_else",
			  "base_type": "activity",
			  "properties": {
				"continue_on_failure": false,
				"display_name": "Was the request successful?",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "blocks": [
				{
				  "unique_name": "definition_activity_01N8HO1WZKQMF5A8dwppA7jUuDg16EgHjQ7",
				  "name": "Condition Branch",
				  "title": "200/Success",
				  "type": "logic.condition_block",
				  "base_type": "activity",
				  "properties": {
					"condition": {
					  "left_operand": "$activity.definition_activity_01N8HGKVTR34T463zPkPT4oYgYzgAHvTyMw.output.status_code$",
					  "operator": "eq",
					  "right_operand": 200
					},
					"continue_on_failure": false,
					"display_name": "200/Success",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "actions": [
					{
					  "unique_name": "definition_activity_01N8HPT6X7SF73rewnMAR9TpttnH8Y4WGrR",
					  "name": "Execute Python Script",
					  "title": "Extract IP Addresses",
					  "type": "python3.script",
					  "base_type": "activity",
					  "properties": {
						"action_timeout": 180,
						"continue_on_failure": false,
						"display_name": "Extract IP Addresses",
						"script": "import sys, json\n\nbody = sys.argv[1]\nbody = body.splitlines()\nbody = [json.loads(row) for row in body][1:-1]\n\nresult = json.loads(sys.argv[2])\n\nfor item in body:\n    result += item.get('obj').get('rdata')\n\nresult = list(set(result))\nresult = json.dumps(result)",
						"script_arguments": [
						  "$activity.definition_activity_01N8HGKVTR34T463zPkPT4oYgYzgAHvTyMw.output.response_body$",
						  "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.local.variable_workflow_01N8HA44X4HN40mP2dyhYZkN7FoFtBSjBfl$"
						],
						"script_queries": [
						  {
							"script_query": "result",
							"script_query_name": "result",
							"script_query_type": "string"
						  }
						],
						"skip_execution": false
					  },
					  "object_type": "definition_activity"
					},
					{
					  "unique_name": "definition_activity_01N8HSLW3I9BZ2eLW7qwIlbn11Qt5KtxHM6",
					  "name": "Set Variables",
					  "title": "Update local variable",
					  "type": "core.set_multiple_variables",
					  "base_type": "activity",
					  "properties": {
						"continue_on_failure": false,
						"display_name": "Update local variable",
						"skip_execution": false,
						"variables_to_update": [
						  {
							"variable_to_update": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.local.variable_workflow_01N8HA44X4HN40mP2dyhYZkN7FoFtBSjBfl$",
							"variable_value_new": "$activity.definition_activity_01N8HPT6X7SF73rewnMAR9TpttnH8Y4WGrR.output.script_queries.result$"
						  }
						]
					  },
					  "object_type": "definition_activity"
					}
				  ]
				},
				{
				  "unique_name": "definition_activity_01N8HO1XL2HSH6zetsXEkuuFmxgC0ZlKFtT",
				  "name": "Condition Branch",
				  "title": "Anything else",
				  "type": "logic.condition_block",
				  "base_type": "activity",
				  "properties": {
					"condition": {
					  "left_operand": "$activity.definition_activity_01N8HGKVTR34T463zPkPT4oYgYzgAHvTyMw.output.status_code$",
					  "operator": "ne",
					  "right_operand": 200
					},
					"continue_on_failure": false,
					"display_name": "Anything else",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "actions": [
					{
					  "unique_name": "definition_activity_01N8HRKJ6MBVQ4i4rGo8tRpalS44y3Gvkq8",
					  "name": "Completed",
					  "title": "Failed",
					  "type": "logic.completed",
					  "base_type": "activity",
					  "properties": {
						"completion_type": "failed-completed",
						"continue_on_failure": false,
						"display_name": "Failed",
						"result_message": "Failed to search for \"$activity.definition_activity_01N8HFNHHLVDH5Gq7ar6YhWBVCWLMA1sUmb.input.source_array[@]$\" records in Farsight DNSDB\n\nStatus code: $activity.definition_activity_01N8HGKVTR34T463zPkPT4oYgYzgAHvTyMw.output.status_code$\nResponse body: $activity.definition_activity_01N8HGKVTR34T463zPkPT4oYgYzgAHvTyMw.output.response_body$",
						"skip_execution": false
					  },
					  "object_type": "definition_activity"
					}
				  ]
				}
			  ]
			}
		  ]
		},
		{
		  "unique_name": "definition_activity_01N8M88GWT51M0xRTWSHIvnOaJtBJFJbh4S",
		  "name": "Condition Block",
		  "title": "Were there any results?",
		  "type": "logic.if_else",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Were there any results?",
			"skip_execution": false
		  },
		  "object_type": "definition_activity",
		  "blocks": [
			{
			  "unique_name": "definition_activity_01N8M88U7RYOX6CGSqG0X73r58suaSCS2wV",
			  "name": "Condition Branch",
			  "title": "No",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.local.variable_workflow_01N8HA44X4HN40mP2dyhYZkN7FoFtBSjBfl$",
				  "operator": "eq",
				  "right_operand": "[]"
				},
				"continue_on_failure": false,
				"display_name": "No",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01N8M9PB4O0JC4sFvrbvmyFxssDYcuKNMkn",
				  "name": "Completed",
				  "title": "Completed",
				  "type": "logic.completed",
				  "base_type": "activity",
				  "properties": {
					"completion_type": "succeeded",
					"continue_on_failure": false,
					"display_name": "Completed",
					"result_message": "No IP addresses were returned by Farsight",
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				}
			  ]
			}
		  ]
		},
		{
		  "unique_name": "definition_activity_01N8MAMG30CKF3XdNcsPSYgBMiS3hHbw0uh",
		  "name": "Execute Python Script",
		  "title": "Format JSON to convert to table",
		  "type": "python3.script",
		  "base_type": "activity",
		  "properties": {
			"action_timeout": 180,
			"continue_on_failure": false,
			"display_name": "Format JSON to convert to table",
			"script": "import sys, json\n\nips = json.loads(sys.argv[1])\nips = [{'ip': ip} for ip in ips]\nips = json.dumps(ips)",
			"script_arguments": [
			  "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.local.variable_workflow_01N8HA44X4HN40mP2dyhYZkN7FoFtBSjBfl$"
			],
			"script_queries": [
			  {
				"script_query": "ips",
				"script_query_name": "ips",
				"script_query_type": "string"
			  }
			],
			"skip_execution": false
		  },
		  "object_type": "definition_activity"
		},
		{
		  "unique_name": "definition_activity_01N8MBZ2N845R4IHd3uD4QqBxm885wAyLyi",
		  "name": "Read Table from JSON",
		  "title": "Convert IPs to table",
		  "type": "corejava.read_table_from_json",
		  "base_type": "activity",
		  "properties": {
			"action_timeout": 180,
			"continue_on_failure": false,
			"display_name": "Convert IPs to table",
			"input_json": "$activity.definition_activity_01N8MAMG30CKF3XdNcsPSYgBMiS3hHbw0uh.output.script_queries.ips$",
			"jsonpath_query": "$.",
			"persist_output": false,
			"populate_columns": false,
			"skip_execution": false,
			"table_columns": [
			  {
				"column_name": "ip",
				"column_type": "string"
			  }
			]
		  },
		  "object_type": "definition_activity"
		},
		{
		  "unique_name": "definition_activity_01N8MDJBFQBIN4l3GddK8PWqfNeewAVCPFa",
		  "name": "For Each",
		  "title": "For each IP address",
		  "type": "logic.for_each",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "For each IP address",
			"skip_execution": false,
			"source_array": "$activity.definition_activity_01N8MBZ2N845R4IHd3uD4QqBxm885wAyLyi.output.read_table_from_json$"
		  },
		  "object_type": "definition_activity",
		  "actions": [
			{
			  "unique_name": "definition_activity_01N8ME9B9NTCD3mzD2ptOrTgLFWVlenGKnR",
			  "name": "HTTP Request",
			  "title": "Search for records",
			  "type": "web-service.http_request",
			  "base_type": "activity",
			  "properties": {
				"accept": "application/x-ndjson",
				"action_timeout": 180,
				"allow_auto_redirect": true,
				"continue_on_error_status_code": true,
				"continue_on_failure": false,
				"custom_headers": [
				  {
					"name": "X-API-Key",
					"value": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.input.variable_workflow_01N8H88FV7OSU5Q7LZEodDeLLmDAShd6VEz$"
				  }
				],
				"display_name": "Search for records",
				"method": "GET",
				"relative_url": "dnsdb/v2/lookup/rdata/ip/$activity.definition_activity_01N8MDJBFQBIN4l3GddK8PWqfNeewAVCPFa.input.source_array[@].ip$",
				"runtime_user": {
				  "override_target_runtime_user": false,
				  "target_default": true
				},
				"skip_execution": false,
				"target": {
				  "override_workflow_target": false,
				  "override_workflow_target_group_criteria": false,
				  "use_workflow_target": true,
				  "use_workflow_target_group": false
				}
			  },
			  "object_type": "definition_activity"
			},
			{
			  "unique_name": "definition_activity_01N8MH83S6KMG2jJyqoeBsGEJpTdhlfd1Vb",
			  "name": "Condition Block",
			  "title": "Was the request successful?",
			  "type": "logic.if_else",
			  "base_type": "activity",
			  "properties": {
				"continue_on_failure": false,
				"display_name": "Was the request successful?",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "blocks": [
				{
				  "unique_name": "definition_activity_01N8MH8GVMIHP3xA4yJzmiO6nOjOepvLezn",
				  "name": "Condition Branch",
				  "title": "200/Success",
				  "type": "logic.condition_block",
				  "base_type": "activity",
				  "properties": {
					"condition": {
					  "left_operand": "$activity.definition_activity_01N8ME9B9NTCD3mzD2ptOrTgLFWVlenGKnR.output.status_code$",
					  "operator": "eq",
					  "right_operand": 200
					},
					"continue_on_failure": false,
					"display_name": "200/Success",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "actions": [
					{
					  "unique_name": "definition_activity_01N8MJWIIWSLU5CEc8sbTPCMqkcdtAS9ikx",
					  "name": "Execute Python Script",
					  "title": "Extract hostnames",
					  "type": "python3.script",
					  "base_type": "activity",
					  "properties": {
						"action_timeout": 180,
						"continue_on_failure": false,
						"display_name": "Extract hostnames",
						"script": "import sys, json\nfrom ipaddress import ip_address\n\nresponse, hostnames, ip = sys.argv[1:4]\n\nchank = {\n'type': f'IPv{str(ip_address(ip).version)}',\n'value': ip,\n'hostnames': []\n}\n\nbody = [json.loads(row) for row in response.splitlines()][1:-1]\nfor item in body:\n    chank['hostnames'].append(item.get('obj').get('rrname'))\n\noutput = json.loads(hostnames)\noutput.append(chank)\noutput = json.dumps(output)",
						"script_arguments": [
						  "$activity.definition_activity_01N8ME9B9NTCD3mzD2ptOrTgLFWVlenGKnR.output.response_body$",
						  "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.output.variable_workflow_01N8H92H1PGFC4fVbXBY3E1KQXjyUwruxy8$",
						  "$activity.definition_activity_01N8MDJBFQBIN4l3GddK8PWqfNeewAVCPFa.input.source_array[@].ip$"
						],
						"script_queries": [
						  {
							"script_query": "output",
							"script_query_name": "output",
							"script_query_type": "string"
						  }
						],
						"skip_execution": false
					  },
					  "object_type": "definition_activity"
					},
					{
					  "unique_name": "definition_activity_01N8MQ978ZYH224ONLkl3xy650RbqDHMVAr",
					  "name": "Set Variables",
					  "title": "Update output variable",
					  "type": "core.set_multiple_variables",
					  "base_type": "activity",
					  "properties": {
						"continue_on_failure": false,
						"display_name": "Update output variable",
						"skip_execution": false,
						"variables_to_update": [
						  {
							"variable_to_update": "$workflow.definition_workflow_01N8H4J8C6GEO1YBwOzGRT87qimZ0zjda0X.output.variable_workflow_01N8H92H1PGFC4fVbXBY3E1KQXjyUwruxy8$",
							"variable_value_new": "$activity.definition_activity_01N8MJWIIWSLU5CEc8sbTPCMqkcdtAS9ikx.output.script_queries.output$"
						  }
						]
					  },
					  "object_type": "definition_activity"
					}
				  ]
				},
				{
				  "unique_name": "definition_activity_01N8MH8HHIX600bgOXDYlSHjaUQdsHRn0IP",
				  "name": "Condition Branch",
				  "title": "Anything else",
				  "type": "logic.condition_block",
				  "base_type": "activity",
				  "properties": {
					"condition": {
					  "left_operand": "$activity.definition_activity_01N8ME9B9NTCD3mzD2ptOrTgLFWVlenGKnR.output.status_code$",
					  "operator": "ne",
					  "right_operand": 200
					},
					"continue_on_failure": false,
					"display_name": "Anything else",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "actions": [
					{
					  "unique_name": "definition_activity_01N8MJ8590ZIC0rgoXSvZzITd8brJIDeglM",
					  "name": "Completed",
					  "title": "Return Error",
					  "type": "logic.completed",
					  "base_type": "activity",
					  "properties": {
						"completion_type": "failed-completed",
						"continue_on_failure": false,
						"display_name": "Return Error",
						"result_message": "Failed to search for records in Farsight DNSDB\n\nStatus code: $activity.definition_activity_01N8ME9B9NTCD3mzD2ptOrTgLFWVlenGKnR.output.status_code$\nResponse body: $activity.definition_activity_01N8ME9B9NTCD3mzD2ptOrTgLFWVlenGKnR.output.response_body$",
						"skip_execution": false
					  },
					  "object_type": "definition_activity"
					}
				  ]
				}
			  ]
			}
		  ]
		}
	  ],
	  "categories": [
		"category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
	  ]
	}
  }