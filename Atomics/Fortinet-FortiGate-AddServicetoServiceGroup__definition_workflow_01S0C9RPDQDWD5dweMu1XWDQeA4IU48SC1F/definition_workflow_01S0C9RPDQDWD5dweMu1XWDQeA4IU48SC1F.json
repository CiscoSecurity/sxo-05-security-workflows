{
	"workflow": {
	  "unique_name": "definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F",
	  "name": "Fortinet - FortiGate - Add Service to Service Group",
	  "title": "Fortinet - FortiGate - Add Service to Service Group",
	  "type": "generic.workflow",
	  "base_type": "workflow",
	  "variables": [
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Service Group Name",
			"type": "datatype.string",
			"description": "Name of the service group to add the service to",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01S0C9RPKEXJT5H15bhEVzKRn2OiSTB3sqL",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.secure_string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Access Token",
			"type": "datatype.secure_string",
			"description": "Access token for the FortiGate API. This can be generated by creating a new REST API Admin under System > Administrators",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01S0C9RPKEG560ccSdgHicX3AR3iN4DgQDD",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "output",
			"name": "API Response",
			"type": "datatype.string",
			"description": "Raw response from the FortiGate API",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01S0C9RPKF5SD5UpbCcMaMbHzecH7gMu0zl",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Service Name",
			"type": "datatype.string",
			"description": "Name of the service to add to the service group",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01S0C9RPKE1J41hHDROkolBsfyL1CjzNsMj",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "root",
			"scope": "input",
			"name": "VDOM",
			"type": "datatype.string",
			"description": "The virtual domain (VDOM) to query. Sample values:\nroot (Single VDOM)\nvdom1,vdom2 (Multiple VDOMs)\n* (All VDOMs)",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01S0C9RPKEORM6jFLBwq4BGHGq3E2NDuJwl",
		  "object_type": "variable_workflow"
		}
	  ],
	  "properties": {
		"atomic": {
		  "atomic_group": "Fortinet FortiGate",
		  "is_atomic": true
		},
		"delete_workflow_instance": false,
		"description": "Adds a service to an existing service group.\n\nNote: You may need to use a SecureX Orchestration Remote to communicate with FortiGate Firewall if it's on-premise. See: https://cs.co/SXO_remote\n\nTarget: HTTP Endpoint for your FortiGate instance with a path of \"api/\"\n\nAccount Key: None (uses an access token)\n\nSteps:\n[] Fetch the service group\n[] Check if the request was successful:\n[]> If it wasn't, return an error\n[]> If it was:\n[]>> Extract the service group JSON\n[]>> Check if the service is already in the group (if it is, set the output variable and end the workflow)\n[]>> Request the service group to be updated\n[]>> Check if the request was successful:\n[]>>> If it was, set the output variable\n[]>>> If it wasn't, return an error\n\nMore information about this API: https://fndn.fortinet.net/index.php?/fortiapi/1-fortios/1018/1/firewall",
		"display_name": "Fortinet - FortiGate - Add Service to Service Group",
		"runtime_user": {
		  "target_default": true
		},
		"target": {
		  "target_type": "web-service.endpoint",
		  "specify_on_workflow_start": true
		}
	  },
	  "object_type": "definition_workflow",
	  "actions": [
		{
		  "unique_name": "definition_activity_01S0C9RRW1NE216NcpbzlWQ5Vc2KIwOskm5",
		  "name": "HTTP Request",
		  "title": "Get service group",
		  "type": "web-service.http_request",
		  "base_type": "activity",
		  "properties": {
			"accept": "application/json",
			"action_timeout": 180,
			"allow_auto_redirect": true,
			"content_type": "application/json",
			"continue_on_error_status_code": true,
			"continue_on_failure": false,
			"display_name": "Get service group",
			"method": "GET",
			"relative_url": "/v2/cmdb/firewall.service/group/$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.input.variable_workflow_01S0C9RPKEXJT5H15bhEVzKRn2OiSTB3sqL$?access_token=$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.input.variable_workflow_01S0C9RPKEG560ccSdgHicX3AR3iN4DgQDD$&vdom=$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.input.variable_workflow_01S0C9RPKEORM6jFLBwq4BGHGq3E2NDuJwl$",
			"runtime_user": {
			  "target_default": true
			},
			"skip_execution": false,
			"target": {
			  "use_workflow_target": true
			}
		  },
		  "object_type": "definition_activity"
		},
		{
		  "unique_name": "definition_activity_01S0C9RSLLOZJ5s2MPQEYpfzzpQk8frXHlR",
		  "name": "Condition Block",
		  "title": "Was the request successful?",
		  "type": "logic.if_else",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Was the request successful?",
			"skip_execution": false
		  },
		  "object_type": "definition_activity",
		  "blocks": [
			{
			  "unique_name": "definition_activity_01S0C9RTBJJRZ0ynEqg4nk3iGlJiOYleCaE",
			  "name": "Condition Branch",
			  "title": "200/Success",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": "$activity.definition_activity_01S0C9RRW1NE216NcpbzlWQ5Vc2KIwOskm5.output.status_code$",
				  "operator": "eq",
				  "right_operand": 200
				},
				"continue_on_failure": false,
				"display_name": "200/Success",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01S0C9RUBWPJ26UWh2CUZXSNafrz8mLsTgX",
				  "name": "JSONPath Query",
				  "title": "Extract service group JSON",
				  "type": "corejava.jsonpathquery",
				  "base_type": "activity",
				  "properties": {
					"action_timeout": 180,
					"continue_on_failure": true,
					"display_name": "Extract service group JSON",
					"input_json": "$activity.definition_activity_01S0C9RRW1NE216NcpbzlWQ5Vc2KIwOskm5.output.response_body$",
					"jsonpath_queries": [
					  {
						"jsonpath_query": ".results[0]",
						"jsonpath_query_name": "Group JSON",
						"jsonpath_query_type": "string"
					  }
					],
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				},
				{
				  "unique_name": "definition_activity_01S0C9RV3ONQ80KngwWsdQcSY7FDjuB65n6",
				  "name": "Condition Block",
				  "title": "Extraction successful?",
				  "type": "logic.if_else",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Extraction successful?",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "blocks": [
					{
					  "unique_name": "definition_activity_01S0C9RVV08OB5wPOr1KybylCcUhnT2Y6kF",
					  "name": "Condition Branch",
					  "title": "No",
					  "type": "logic.condition_block",
					  "base_type": "activity",
					  "properties": {
						"condition": {
						  "left_operand": "$activity.definition_activity_01S0C9RUBWPJ26UWh2CUZXSNafrz8mLsTgX.output.succeeded$",
						  "operator": "eq",
						  "right_operand": false
						},
						"continue_on_failure": false,
						"display_name": "No",
						"skip_execution": false
					  },
					  "object_type": "definition_activity",
					  "actions": [
						{
						  "unique_name": "definition_activity_01S0C9RWTG6DS5HgopnzV6btsV1z2pqwutt",
						  "name": "Completed",
						  "title": "Failed",
						  "type": "logic.completed",
						  "base_type": "activity",
						  "properties": {
							"completion_type": "failed-completed",
							"continue_on_failure": false,
							"display_name": "Failed",
							"result_message": "Failed to fetch the service group provided",
							"skip_execution": false
						  },
						  "object_type": "definition_activity"
						}
					  ]
					}
				  ]
				},
				{
				  "unique_name": "definition_activity_01S0C9RXHGEVV314pyVijkHqsjVCR6mKesi",
				  "name": "Execute Python Script",
				  "title": "Update service group JSON",
				  "type": "python3.script",
				  "base_type": "activity",
				  "properties": {
					"action_timeout": 180,
					"continue_on_failure": false,
					"display_name": "Update service group JSON",
					"script": "from sys import argv\nimport json\ngroup_json = json.loads(argv[1])\nmember_already_in_group = True\nservice_name = argv[2]\nmembers = group_json[\"member\"]\nif not any(d['name'] == service_name for d in members):\n    member_already_in_group = False\n    members.append({'name': service_name})\n    group_json[\"member\"] = members\ngroup_json = json.dumps(group_json)",
					"script_arguments": [
					  "$activity.definition_activity_01S0C9RUBWPJ26UWh2CUZXSNafrz8mLsTgX.output.jsonpath_queries.Group JSON$",
					  "$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.input.variable_workflow_01S0C9RPKE1J41hHDROkolBsfyL1CjzNsMj$"
					],
					"script_queries": [
					  {
						"script_query": "group_json",
						"script_query_name": "Group JSON",
						"script_query_type": "string"
					  },
					  {
						"script_query": "member_already_in_group",
						"script_query_name": "Member Already In Group",
						"script_query_type": "boolean"
					  }
					],
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				},
				{
				  "unique_name": "definition_activity_01S0C9RY8MRSR1GLxCsuJ4n95OZOn4YM77C",
				  "name": "Condition Block",
				  "title": "Service already in the group?",
				  "type": "logic.if_else",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Service already in the group?",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "blocks": [
					{
					  "unique_name": "definition_activity_01S0C9RZ0VEPR0QOzBNxMybsY0kNHkVvw7b",
					  "name": "Condition Branch",
					  "title": "Yes",
					  "type": "logic.condition_block",
					  "base_type": "activity",
					  "properties": {
						"condition": {
						  "left_operand": "$activity.definition_activity_01S0C9RXHGEVV314pyVijkHqsjVCR6mKesi.output.script_queries.Member Already In Group$",
						  "operator": "eq",
						  "right_operand": "true"
						},
						"continue_on_failure": false,
						"display_name": "Yes",
						"skip_execution": false
					  },
					  "object_type": "definition_activity",
					  "actions": [
						{
						  "unique_name": "definition_activity_01S0C9RZX6RQQ6Za2xVFPT4Z7QqTt69kO3t",
						  "name": "Set Variables",
						  "title": "Set output variable",
						  "type": "core.set_multiple_variables",
						  "base_type": "activity",
						  "properties": {
							"continue_on_failure": false,
							"display_name": "Set output variable",
							"skip_execution": false,
							"variables_to_update": [
							  {
								"variable_to_update": "$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.output.variable_workflow_01S0C9RPKF5SD5UpbCcMaMbHzecH7gMu0zl$",
								"variable_value_new": "$activity.definition_activity_01S0C9RRW1NE216NcpbzlWQ5Vc2KIwOskm5.output.response_body$"
							  }
							]
						  },
						  "object_type": "definition_activity"
						},
						{
						  "unique_name": "definition_activity_01S0C9S0RG5NV0IdqnFzpGLrJmwuoHY46mY",
						  "name": "Completed",
						  "title": "Completed",
						  "type": "logic.completed",
						  "base_type": "activity",
						  "properties": {
							"completion_type": "succeeded",
							"continue_on_failure": false,
							"display_name": "Completed",
							"skip_execution": false
						  },
						  "object_type": "definition_activity"
						}
					  ]
					}
				  ]
				},
				{
				  "unique_name": "definition_activity_01S0C9S1IVB321rI8c7vE8cJ00oKrJJH0s2",
				  "name": "HTTP Request",
				  "title": "Update service group",
				  "type": "web-service.http_request",
				  "base_type": "activity",
				  "properties": {
					"accept": "application/json",
					"action_timeout": 180,
					"allow_auto_redirect": true,
					"body": "$activity.definition_activity_01S0C9RXHGEVV314pyVijkHqsjVCR6mKesi.output.script_queries.Group JSON$",
					"content_type": "application/json",
					"continue_on_error_status_code": true,
					"continue_on_failure": false,
					"display_name": "Update service group",
					"method": "PUT",
					"relative_url": "/v2/cmdb/firewall.service/group/$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.input.variable_workflow_01S0C9RPKEXJT5H15bhEVzKRn2OiSTB3sqL$?access_token=$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.input.variable_workflow_01S0C9RPKEG560ccSdgHicX3AR3iN4DgQDD$&vdom=$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.input.variable_workflow_01S0C9RPKEORM6jFLBwq4BGHGq3E2NDuJwl$",
					"runtime_user": {
					  "target_default": true
					},
					"skip_execution": false,
					"target": {
					  "use_workflow_target": true
					}
				  },
				  "object_type": "definition_activity"
				},
				{
				  "unique_name": "definition_activity_01S0C9S2GXSRT07JlmQIbHuhXsvj8E7gDoJ",
				  "name": "Condition Block",
				  "title": "Was the request successful?",
				  "type": "logic.if_else",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Was the request successful?",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "blocks": [
					{
					  "unique_name": "definition_activity_01S0C9S37P6II3JMPqejslpI4vqyW12grvq",
					  "name": "Condition Branch",
					  "title": "200/Success",
					  "type": "logic.condition_block",
					  "base_type": "activity",
					  "properties": {
						"condition": {
						  "left_operand": "$activity.definition_activity_01S0C9S1IVB321rI8c7vE8cJ00oKrJJH0s2.output.status_code$",
						  "operator": "eq",
						  "right_operand": 200
						},
						"continue_on_failure": false,
						"display_name": "200/Success",
						"skip_execution": false
					  },
					  "object_type": "definition_activity",
					  "actions": [
						{
						  "unique_name": "definition_activity_01S0C9S4469YZ5y7ysVBkGgBNopkWOzJk2T",
						  "name": "Set Variables",
						  "title": "Set output variable",
						  "type": "core.set_multiple_variables",
						  "base_type": "activity",
						  "properties": {
							"continue_on_failure": false,
							"display_name": "Set output variable",
							"skip_execution": false,
							"variables_to_update": [
							  {
								"variable_to_update": "$workflow.definition_workflow_01S0C9RPDQDWD5dweMu1XWDQeA4IU48SC1F.output.variable_workflow_01S0C9RPKF5SD5UpbCcMaMbHzecH7gMu0zl$",
								"variable_value_new": "$activity.definition_activity_01S0C9S1IVB321rI8c7vE8cJ00oKrJJH0s2.output.response_body$"
							  }
							]
						  },
						  "object_type": "definition_activity"
						}
					  ]
					},
					{
					  "unique_name": "definition_activity_01S0C9S4ZI3MQ0ZV8i80CVWWpBjNp2cLPUN",
					  "name": "Condition Branch",
					  "title": "Anything else",
					  "type": "logic.condition_block",
					  "base_type": "activity",
					  "properties": {
						"condition": {
						  "left_operand": "$activity.definition_activity_01S0C9S1IVB321rI8c7vE8cJ00oKrJJH0s2.output.status_code$",
						  "operator": "ne",
						  "right_operand": 200
						},
						"continue_on_failure": false,
						"display_name": "Anything else",
						"skip_execution": false
					  },
					  "object_type": "definition_activity",
					  "actions": [
						{
						  "unique_name": "definition_activity_01S0C9S5U4RQ50bxHhIkt36RJLlvQgXQEZF",
						  "name": "Completed",
						  "title": "Failed",
						  "type": "logic.completed",
						  "base_type": "activity",
						  "properties": {
							"completion_type": "failed-completed",
							"continue_on_failure": false,
							"display_name": "Failed",
							"result_message": "Failed to add service to service group\n\nStatus code: $activity.definition_activity_01S0C9S1IVB321rI8c7vE8cJ00oKrJJH0s2.output.status_code$\nResponse body: $activity.definition_activity_01S0C9S1IVB321rI8c7vE8cJ00oKrJJH0s2.output.response_body$",
							"skip_execution": false
						  },
						  "object_type": "definition_activity"
						}
					  ]
					}
				  ]
				}
			  ]
			},
			{
			  "unique_name": "definition_activity_01S0C9S6K5TSC58Id6rnHv3G4PONkISnULD",
			  "name": "Condition Branch",
			  "title": "Anything else",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": "$activity.definition_activity_01S0C9RRW1NE216NcpbzlWQ5Vc2KIwOskm5.output.status_code$",
				  "operator": "ne",
				  "right_operand": 200
				},
				"continue_on_failure": false,
				"display_name": "Anything else",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01S0C9S7BWRP25baWxGB4T6KpEP9LrrFZJV",
				  "name": "Completed",
				  "title": "Failed",
				  "type": "logic.completed",
				  "base_type": "activity",
				  "properties": {
					"completion_type": "failed-completed",
					"continue_on_failure": false,
					"display_name": "Failed",
					"result_message": "Failed to fetch the service group\n\nStatus code: $activity.definition_activity_01S0C9RRW1NE216NcpbzlWQ5Vc2KIwOskm5.output.status_code$\nResponse body: $activity.definition_activity_01S0C9RRW1NE216NcpbzlWQ5Vc2KIwOskm5.output.response_body$",
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				}
			  ]
			}
		  ]
		}
	  ],
	  "categories": [
		"category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
	  ]
	}
  }