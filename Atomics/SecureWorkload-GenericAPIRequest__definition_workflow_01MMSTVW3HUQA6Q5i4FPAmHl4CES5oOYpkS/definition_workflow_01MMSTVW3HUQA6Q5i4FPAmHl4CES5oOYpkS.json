{
  "workflow": {
    "unique_name": "definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS",
    "name": "Secure Workload - Generic API Request",
    "title": "Secure Workload - Generic API Request",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Request Body",
          "type": "datatype.string",
          "description": "The JSON-formatted request body to send with the request. Required for POST/PUT requests",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MMT42WDXYCE269Jm2kJDNKfnuIJCxEou8",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "API Secret",
          "type": "datatype.secure_string",
          "description": "Cisco Secure Workload API secret with appropriate permissions for the desired API action",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01NLDTOZAWNG26C0YFOO5L2RrKompc9fRUt",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "API Key",
          "type": "datatype.string",
          "description": "Cisco Secure Workload API key with appropriate permissions for the desired API action",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01NMC19PB4WX753DWGIdffYtDDDmSAKBesV",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Method",
          "type": "datatype.string",
          "description": "API request method.  Supported methods are: GET/POST/PUT/DELETE",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MMT5WQ8P1WA15RGZxmyflvgJYIf4fiMBQ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Response Body",
          "type": "datatype.string",
          "description": "Response body from the API request. This will be JSON if the request was successful but may be text if there's a failure",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MMTNP99SQBL1FxPVavvSRFkdPAnfaxDrK",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Request Path",
          "type": "datatype.string",
          "description": "The path to send the request to. All API paths should begin with \"/openapi/v1/\". Example: /openapi/v1/applications",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MMT274ZOFLJ3Vfq6O2sXx3lpymp90Ewpr",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Cisco Secure Workload",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "Makes a generic API request to Cisco Secure Workload (formerly Tetration). Secure Workload uses a digest authentication format that is not natively supported by SecureX Orchestration. This action provides the appropriate authentication and request formatting to integrate with the REST API.\n\nTarget: HTTP Endpoint for your Secure Workload instance. For example: customer.tetrationcloud.com\n\nAccount Key: None. Uses an API key and secret\n\nSteps:\n[] Generate the authorization headers and request body\n[] Execute the API request\n[] Check if the request was successful:\n[]\u003e If it was, set the output variables with the request result\n[]\u003e If it wasn't, output an error\n\nMore information about this API: https://www.cisco.com/c/en/us/td/docs/security/workload_security/tetration-analytics/sw/config/b_Tetration_OpenAPI/m_OpenAPI_Authentication.html",
      "display_name": "Secure Workload - Generic API Request",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01MMSWVYK700T2PPAUxLm2JtHdUOEDqQTa5",
        "name": "Execute Python Script",
        "title": "Generate API authorization",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Generate API authorization",
          "script": "import sys, datetime, hashlib, hmac, base64, codecs, json\n\n(method,path,body,secret) = sys.argv[1:]\nif body != None and body != '': \n    body = json.dumps(json.loads(body))\n\ndef generate_auth(method,path,body,secret):\n    content_type='application/json'\n    time_fmt = '%Y-%m-%dT%H:%M:%S+0000'\n    timestamp = datetime.datetime.utcnow().strftime(time_fmt)\n    checksum = \"\"\n    if method in (\"POST\",\"PUT\"): checksum = hashlib.sha256(body.encode('utf-8')).hexdigest()\n    signer = hmac.new(codecs.encode(secret,'latin-1'), digestmod=hashlib.sha256)\n    signer.update((method + '\\n').encode('utf-8'))\n    signer.update((path + '\\n').encode('utf-8'))\n    signer.update((checksum + '\\n') .encode('utf-8'))\n    signer.update((content_type + '\\n').encode('utf-8'))\n    signer.update((timestamp + '\\n').encode('utf-8'))\n    signature = base64.b64encode(signer.digest())\n    authorization = signature.decode('utf-8')\n    return (timestamp,checksum,authorization)\n\n(timestamp,checksum,authorization)=generate_auth(method,path,body,secret)",
          "script_arguments": [
            "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.input.variable_workflow_01MMT5WQ8P1WA15RGZxmyflvgJYIf4fiMBQ$",
            "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.input.variable_workflow_01MMT274ZOFLJ3Vfq6O2sXx3lpymp90Ewpr$",
            "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.input.variable_workflow_01MMT42WDXYCE269Jm2kJDNKfnuIJCxEou8$",
            "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.input.variable_workflow_01NLDTOZAWNG26C0YFOO5L2RrKompc9fRUt$"
          ],
          "script_queries": [
            {
              "script_query": "timestamp",
              "script_query_name": "timestamp",
              "script_query_type": "secure_string"
            },
            {
              "script_query": "checksum",
              "script_query_name": "checksum",
              "script_query_type": "secure_string"
            },
            {
              "script_query": "authorization",
              "script_query_name": "authorization",
              "script_query_type": "secure_string"
            },
            {
              "script_query": "body",
              "script_query_name": "body",
              "script_query_type": "secure_string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01NMBFE3TLNYR5wwXnVS69gWQmRf6fboLNs",
        "name": "HTTP Request",
        "title": "Execute API request",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "body": "$activity.definition_activity_01MMSWVYK700T2PPAUxLm2JtHdUOEDqQTa5.output.script_queries.body$",
          "content_type": "application/json",
          "continue_on_error_status_code": true,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "Id",
              "value": "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.input.variable_workflow_01NMC19PB4WX753DWGIdffYtDDDmSAKBesV$"
            },
            {
              "name": "Timestamp",
              "value": "$activity.definition_activity_01MMSWVYK700T2PPAUxLm2JtHdUOEDqQTa5.output.script_queries.timestamp$"
            },
            {
              "name": "Authorization",
              "value": "$activity.definition_activity_01MMSWVYK700T2PPAUxLm2JtHdUOEDqQTa5.output.script_queries.authorization$"
            },
            {
              "name": "X-Tetration-Cksum",
              "value": "$activity.definition_activity_01MMSWVYK700T2PPAUxLm2JtHdUOEDqQTa5.output.script_queries.checksum$"
            }
          ],
          "display_name": "Execute API request",
          "method": "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.input.variable_workflow_01MMT5WQ8P1WA15RGZxmyflvgJYIf4fiMBQ$",
          "relative_url": "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.input.variable_workflow_01MMT274ZOFLJ3Vfq6O2sXx3lpymp90Ewpr$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": false,
            "override_workflow_target_group_criteria": false,
            "use_workflow_target": true,
            "use_workflow_target_group": false
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01NMC2OW7YQ6C7Fo5B1p3wAkeb4dWTLbchB",
        "name": "Condition Block",
        "title": "Was the request successful?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Was the request successful?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01NMC2PN81FX62IGx5FyBQ6PjjOvkPtxk02",
            "name": "Condition Branch",
            "title": "200/Success",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": "$activity.definition_activity_01NMBFE3TLNYR5wwXnVS69gWQmRf6fboLNs.output.status_code$",
                  "operator": "gte",
                  "right_operand": 200
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_01NMBFE3TLNYR5wwXnVS69gWQmRf6fboLNs.output.status_code$",
                  "operator": "lt",
                  "right_operand": 300
                }
              },
              "continue_on_failure": false,
              "display_name": "200/Success",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01NMBIME6OVD3237e2U3CFRXy94tx9s2rV3",
                "name": "Set Variables",
                "title": "Set output variables",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set output variables",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.output.variable_workflow_01MMTNP99SQBL1FxPVavvSRFkdPAnfaxDrK$",
                      "variable_value_new": "$activity.definition_activity_01NMBFE3TLNYR5wwXnVS69gWQmRf6fboLNs.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01NMC2PNY1ZWH3eoeI8ecL0g5urFwZ70oBa",
            "name": "Condition Branch",
            "title": "Anything else",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.output.instance_id$",
                "operator": "eq",
                "right_operand": "$workflow.definition_workflow_01MMSTVW3HUQA6Q5i4FPAmHl4CES5oOYpkS.output.instance_id$"
              },
              "continue_on_failure": false,
              "display_name": "Anything else",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01NMC2VN0CT8N68gXtIv7Qg9EjXPfTDovxC",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "result_message": "Failed to execute API request\n\nStatus code: $activity.definition_activity_01NMBFE3TLNYR5wwXnVS69gWQmRf6fboLNs.output.status_code$\nResponse body: $activity.definition_activity_01NMBFE3TLNYR5wwXnVS69gWQmRf6fboLNs.output.response_body$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  }
}