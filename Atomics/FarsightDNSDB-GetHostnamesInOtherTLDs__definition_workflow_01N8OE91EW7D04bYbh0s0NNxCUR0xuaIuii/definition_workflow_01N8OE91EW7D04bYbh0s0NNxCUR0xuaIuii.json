{
	"workflow": {
	  "unique_name": "definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii",
	  "name": "Farsight DNSDB - Get Hostnames in Other TLDs",
	  "title": "Farsight DNSDB - Get Hostnames in Other TLDs",
	  "type": "generic.workflow",
	  "base_type": "workflow",
	  "variables": [
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Hostname",
			"type": "datatype.string",
			"description": "Hostname to search in other TLDs for",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8OH0XGNCTD7LkVIDjaeEkQPdrS8PChrp",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.secure_string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Farsight API Key",
			"type": "datatype.secure_string",
			"description": "Your Farsight DNSDB API key. See: https://docs.dnsdb.info/dnsdb-api/#authentication",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8OGB3HXY2E1fCpqO6RskHGX6aEQ6iv1D",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "?",
			"scope": "local",
			"name": "Time Parameters",
			"type": "datatype.string",
			"description": "Placeholder to build the query string if timestamps are provided. This will be populated automatically",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01R5WBHL032LS2orzRXgeO6Rfz9CnC369Z6",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.date",
		  "properties": {
			"value": "0001-01-01T00:00:00+00:00",
			"scope": "input",
			"name": "Seen Before Date",
			"type": "datatype.date",
			"description": "Date before which to search (optional)",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01R5W736J47FK7XulsxzO9i0JhfOvHYBg0C",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.integer",
		  "properties": {
			"value": 2,
			"scope": "input",
			"name": "Hierarchy Level",
			"type": "datatype.integer",
			"description": "The level within the domain hierarchy to search:\n0 - All results\n2 - Up to the second level (cisco, cisco.com, etc.)\n3 - Up to the third level (cisco, cisco.com, cisco.co.uk, cisco.co.au, etc)\n(and so on...)",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01R5VN9FUT6W354Ad0eB37zL8NxXQrQZXFv",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.date",
		  "properties": {
			"value": "0001-01-01T00:00:00+00:00",
			"scope": "input",
			"name": "Seen After Date",
			"type": "datatype.date",
			"description": "Date after which to search (optional)",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01R5W6CEYP09Y3WvSlFr5cZ9M6IhnoFdM5q",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "output",
			"name": "Hostnames",
			"type": "datatype.string",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01N8OHDW6PH7Z51bynDt8bHy2EpEysKpfJx",
		  "object_type": "variable_workflow"
		}
	  ],
	  "properties": {
		"atomic": {
		  "atomic_group": "Farsight DNSDB",
		  "is_atomic": true
		},
		"delete_workflow_instance": false,
		"description": "Queries Farsight DNSDB for a hostname and gets hostnames in alternative top level domains.\n\nTarget: HTTP Endpoint for \"api.dnsdb.info\"\n\nAccount Key: None (uses API key)\n\nSteps:\n[] Check if the timestamps provided were valid and format them\n[] Search for records in DNSDB\n[] Check if the API request succeeded:\n[]> If it did, extract the records and set the output variable\n[]> If it didn't, output an error\n\nMore information about this API: https://docs.dnsdb.info/dnsdb-apiv2/",
		"display_name": "Farsight DNSDB - Get Hostnames in Other TLDs",
		"runtime_user": {
		  "override_target_runtime_user": false,
		  "specify_on_workflow_start": false,
		  "target_default": true
		},
		"target": {
		  "target_type": "web-service.endpoint",
		  "specify_on_workflow_start": true
		}
	  },
	  "object_type": "definition_workflow",
	  "actions": [
		{
		  "unique_name": "definition_activity_01R5W7GR8EHK31TlciRit3XTLMFVDYzhuWt",
		  "name": "Condition Block",
		  "title": "Were timestamps provided?",
		  "type": "logic.if_else",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Were timestamps provided?",
			"skip_execution": false
		  },
		  "object_type": "definition_activity",
		  "blocks": [
			{
			  "unique_name": "definition_activity_01R5W7GTUMICQ2BfiDtpXFTTXgJBnApkIVU",
			  "name": "Condition Branch",
			  "title": "Yes",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": {
					"left_operand": "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01R5W6CEYP09Y3WvSlFr5cZ9M6IhnoFdM5q$",
					"operator": "ne",
					"right_operand": "0001-01-01T00:00:00+00:00"
				  },
				  "operator": "or",
				  "right_operand": {
					"left_operand": "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01R5W736J47FK7XulsxzO9i0JhfOvHYBg0C$",
					"operator": "ne",
					"right_operand": "0001-01-01T00:00:00+00:00"
				  }
				},
				"continue_on_failure": false,
				"display_name": "Yes",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01R5W91SRMFX43jiXsNUsHCeW1nD7RJagti",
				  "name": "Execute Python Script",
				  "title": "Format timestamps",
				  "type": "python3.script",
				  "base_type": "activity",
				  "properties": {
					"action_timeout": 180,
					"continue_on_failure": false,
					"display_name": "Format timestamps",
					"script": "from sys import argv\nfrom datetime import datetime\n#\ndef form_time(time: str) -> str:\n    return datetime.fromisoformat(time).strftime('%s')\n#\nafter = form_time(argv[1]) if argv[1] != \"0001-01-01T00:00:00+00:00\" else None\nbefore = form_time(argv[2]) if argv[2] != \"0001-01-01T00:00:00+00:00\" else None\nparameters, error = \"?\", None\n#\nif after and before and int(before) <= int(after):\n    error = ('Time range less or equal zero, '\n             '\"Seen After Date\" has to be later then \"Seen Before Date\"')\n#\nif not error:\n    if after:\n        parameters += \"time_last_after=\" + after + \"&\"\n    if before:\n        parameters += \"time_last_before=\" + before",
					"script_arguments": [
					  "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01R5W6CEYP09Y3WvSlFr5cZ9M6IhnoFdM5q$",
					  "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01R5W736J47FK7XulsxzO9i0JhfOvHYBg0C$"
					],
					"script_queries": [
					  {
						"script_query": "parameters",
						"script_query_name": "Parameters",
						"script_query_type": "string"
					  },
					  {
						"script_query": "error",
						"script_query_name": "Error",
						"script_query_type": "string"
					  }
					],
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				},
				{
				  "unique_name": "definition_activity_01R6JIQ6NJN3U1THQ7SHhqhj3UwIrnkI4Mn",
				  "name": "Condition Block",
				  "title": "Are the timestamp formats correct?",
				  "type": "logic.if_else",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Are the timestamp formats correct?",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "blocks": [
					{
					  "unique_name": "definition_activity_01R6JIQ9ROTX61SMqMvCwCfVwaywLnlTMO5",
					  "name": "Condition Branch",
					  "title": "No",
					  "type": "logic.condition_block",
					  "base_type": "activity",
					  "properties": {
						"condition": {
						  "left_operand": "$activity.definition_activity_01R5W91SRMFX43jiXsNUsHCeW1nD7RJagti.output.script_queries.Error$",
						  "operator": "ne",
						  "right_operand": "None"
						},
						"continue_on_failure": false,
						"display_name": "No",
						"skip_execution": false
					  },
					  "object_type": "definition_activity",
					  "actions": [
						{
						  "unique_name": "definition_activity_01R6JJZRKOX0R3QXQx93HyABwyIoEz4a80l",
						  "name": "Completed",
						  "title": "Failed",
						  "type": "logic.completed",
						  "base_type": "activity",
						  "properties": {
							"completion_type": "failed-completed",
							"continue_on_failure": false,
							"display_name": "Failed",
							"result_message": "Invalid timestamps provided:\n$activity.definition_activity_01R5W91SRMFX43jiXsNUsHCeW1nD7RJagti.output.script_queries.Error$",
							"skip_execution": false
						  },
						  "object_type": "definition_activity"
						}
					  ]
					}
				  ]
				},
				{
				  "unique_name": "definition_activity_01R5WBKP8IUIR327NJROYJ10308fBIPsRKl",
				  "name": "Set Variables",
				  "title": "Set time parameters",
				  "type": "core.set_multiple_variables",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Set time parameters",
					"skip_execution": false,
					"variables_to_update": [
					  {
						"variable_to_update": "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.local.variable_workflow_01R5WBHL032LS2orzRXgeO6Rfz9CnC369Z6$",
						"variable_value_new": "$activity.definition_activity_01R5W91SRMFX43jiXsNUsHCeW1nD7RJagti.output.script_queries.Parameters$"
					  }
					]
				  },
				  "object_type": "definition_activity"
				}
			  ]
			}
		  ]
		},
		{
		  "unique_name": "definition_activity_01N8OIPZMSNN76knfRyxdOg8yim2LFlFmXJ",
		  "name": "HTTP Request",
		  "title": "Search for hostnames",
		  "type": "web-service.http_request",
		  "base_type": "activity",
		  "properties": {
			"accept": "application/x-ndjson",
			"action_timeout": 180,
			"allow_auto_redirect": true,
			"continue_on_error_status_code": true,
			"continue_on_failure": false,
			"custom_headers": [
			  {
				"name": "X-API-Key",
				"value": "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01N8OGB3HXY2E1fCpqO6RskHGX6aEQ6iv1D$"
			  }
			],
			"display_name": "Search for hostnames",
			"method": "GET",
			"relative_url": "dnsdb/v2/lookup/rrset/name/$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01N8OH0XGNCTD7LkVIDjaeEkQPdrS8PChrp$.*$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.local.variable_workflow_01R5WBHL032LS2orzRXgeO6Rfz9CnC369Z6$",
			"runtime_user": {
			  "override_target_runtime_user": false,
			  "target_default": true
			},
			"skip_execution": false,
			"target": {
			  "override_workflow_target": false,
			  "override_workflow_target_group_criteria": false,
			  "use_workflow_target": true,
			  "use_workflow_target_group": false
			}
		  },
		  "object_type": "definition_activity"
		},
		{
		  "unique_name": "definition_activity_01N8OL1STVQXW492k4f11BHFZOIfsN7qTSF",
		  "name": "Condition Block",
		  "title": "Was the request successful?",
		  "type": "logic.if_else",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Was the request successful?",
			"skip_execution": false
		  },
		  "object_type": "definition_activity",
		  "blocks": [
			{
			  "unique_name": "definition_activity_01N8OL2I49TJ51lxssN5YWHZXHMbzf9Ajs5",
			  "name": "Condition Branch",
			  "title": "200/success",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": "$activity.definition_activity_01N8OIPZMSNN76knfRyxdOg8yim2LFlFmXJ.output.status_code$",
				  "operator": "eq",
				  "right_operand": 200
				},
				"continue_on_failure": false,
				"display_name": "200/success",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01N8ON3YL42157g7sZ0FFssfXKy0Uy3VJDJ",
				  "name": "Execute Python Script",
				  "title": "Extract hostnames",
				  "type": "python3.script",
				  "base_type": "activity",
				  "properties": {
					"action_timeout": 180,
					"continue_on_failure": false,
					"display_name": "Extract hostnames",
					"script": "import sys\nimport json\nfrom functools import partial\n#\ndef filter_key(host, template, level):\n    template, domains = host.partition(template)[1:3]\n    domains = filter(lambda domain: bool(domain), domains[1:].split('.'))\n    depth = len(list(domains)) + 1\n    return depth <= level\n#\ndef sorting_key(host):\n    return len(host.split('.')), host\n#\ndef filter_hosts(hosts, template, level, filter_key, sorting_key):\n    if level > 0:\n        filter_key = partial(filter_key, template=template, level=level)\n        hosts = filter(filter_key, hosts)\n    return sorted(hosts, key=sorting_key)\n#\nerror, hostnames = None, None\nresponse = sys.argv[1].splitlines()\npattern = sys.argv[2]\nlevel = int(sys.argv[3])\n#\nresponse = [json.loads(row) for row in response][1:-1]\ntry:\n    hosts = {item['obj']['rrname'][:-1] for item in response}\nexcept KeyError:\n    error = 'Farsight response changed, atomic action has to be fixed.'\nif not error:\n    result = filter_hosts(hosts, pattern, level, filter_key, sorting_key)\n    hostnames = json.dumps([{'hostname': item} for item in result])",
					"script_arguments": [
					  "$activity.definition_activity_01N8OIPZMSNN76knfRyxdOg8yim2LFlFmXJ.output.response_body$",
					  "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01N8OH0XGNCTD7LkVIDjaeEkQPdrS8PChrp$",
					  "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.input.variable_workflow_01R5VN9FUT6W354Ad0eB37zL8NxXQrQZXFv$"
					],
					"script_queries": [
					  {
						"script_query": "hostnames",
						"script_query_name": "Hostnames",
						"script_query_type": "string"
					  },
					  {
						"script_query": "error",
						"script_query_name": "Error",
						"script_query_type": "string"
					  }
					],
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				},
				{
				  "unique_name": "definition_activity_01R5VTT4JBCAQ25z6psDYfCxUDkb8dXxEVN",
				  "name": "Condition Block",
				  "title": "Extraction successful?",
				  "type": "logic.if_else",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Extraction successful?",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "blocks": [
					{
					  "unique_name": "definition_activity_01R5VTT7CI6RX3iOAo3x3ZIct0uoK8uQYme",
					  "name": "Condition Branch",
					  "title": "No",
					  "type": "logic.condition_block",
					  "base_type": "activity",
					  "properties": {
						"condition": {
						  "left_operand": "$activity.definition_activity_01N8ON3YL42157g7sZ0FFssfXKy0Uy3VJDJ.output.script_queries.Error$",
						  "operator": "ne",
						  "right_operand": "None"
						},
						"continue_on_failure": false,
						"display_name": "No",
						"skip_execution": false
					  },
					  "object_type": "definition_activity",
					  "actions": [
						{
						  "unique_name": "definition_activity_01R5VVC21RC8K2kHGui7xIJYncVnQLNNKfh",
						  "name": "Completed",
						  "title": "Failed",
						  "type": "logic.completed",
						  "base_type": "activity",
						  "properties": {
							"completion_type": "failed-completed",
							"continue_on_failure": false,
							"display_name": "Failed",
							"result_message": "Failed to extract hostnames from search result:\n$activity.definition_activity_01N8ON3YL42157g7sZ0FFssfXKy0Uy3VJDJ.output.script_queries.Error$",
							"skip_execution": false
						  },
						  "object_type": "definition_activity"
						}
					  ]
					}
				  ]
				},
				{
				  "unique_name": "definition_activity_01N8ONYFLGDKV7HkfOtj6wT7hPAkhCYVVCw",
				  "name": "Set Variables",
				  "title": "Set output variable",
				  "type": "core.set_multiple_variables",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Set output variable",
					"skip_execution": false,
					"variables_to_update": [
					  {
						"variable_to_update": "$workflow.definition_workflow_01N8OE91EW7D04bYbh0s0NNxCUR0xuaIuii.output.variable_workflow_01N8OHDW6PH7Z51bynDt8bHy2EpEysKpfJx$",
						"variable_value_new": "$activity.definition_activity_01N8ON3YL42157g7sZ0FFssfXKy0Uy3VJDJ.output.script_queries.Hostnames$"
					  }
					]
				  },
				  "object_type": "definition_activity"
				}
			  ]
			},
			{
			  "unique_name": "definition_activity_01N8OL2IWEZ6B7AAUwNEzkhIfKKkjCliPMV",
			  "name": "Condition Branch",
			  "title": "Anything else",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": "$activity.definition_activity_01N8OIPZMSNN76knfRyxdOg8yim2LFlFmXJ.output.status_code$",
				  "operator": "ne",
				  "right_operand": 200
				},
				"continue_on_failure": false,
				"display_name": "Anything else",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01N8OM7KLERGM3pHMO4E9pum9Ebc4QhIuGQ",
				  "name": "Completed",
				  "title": "Failed",
				  "type": "logic.completed",
				  "base_type": "activity",
				  "properties": {
					"completion_type": "failed-completed",
					"continue_on_failure": false,
					"display_name": "Failed",
					"result_message": "Failed to get hostnames in other TLDs\n\nStatus code: $activity.definition_activity_01N8OIPZMSNN76knfRyxdOg8yim2LFlFmXJ.output.status_code$\nResponse body: $activity.definition_activity_01N8OIPZMSNN76knfRyxdOg8yim2LFlFmXJ.output.response_body$",
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				}
			  ]
			}
		  ]
		}
	  ],
	  "categories": [
		"category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
	  ]
	}
  }