{
  "workflow": {
    "unique_name": "definition_workflow_01N7Z3TIWI71O7bKVmCXAeyFR6rujDvCT3t",
    "name": "ISE - ERS - Profiler Policy - Get by Name",
    "title": "ISE - ERS - Profiler Policy - Get by Name",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Profiler Policy Name",
          "type": "datatype.string",
          "description": "The name of the profiler policy to search for",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01N7Z3TIQ33HF65BxtFzVheEx4K1RUQPUC8",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Profiler Policy Details",
          "type": "datatype.string",
          "description": "Information about the profiler policy requested",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01N7Z3TIQ39K71N4TQzCBUOauZDElci4nrY",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Profiler Policy ID",
          "type": "datatype.string",
          "description": "The unique ID of the profiler policy",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01N7Z3TIQ389V43LHLOSX5DiSh0vIPMP6Nu",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Cisco ISE",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "Fetches a profiler policy from Cisco Identity Services Engine (ISE) using its name. This atomic is designed for use with ISE version 2.4 or newer.\n\nNote: You may need to use a SecureX Orchestration Remote to communicate with ISE if it's on-premise. See: https://ciscosecurity.github.io/sxo-05-security-workflows/remote\n\nTarget: An HTTP endpoint for your ISE cluster's primary admin node.\n\nAccount Key: HTTP Password-Based Credentials for your ISE target.\n\nSteps:\n[] Request matching profiler policies\n[] Check if the request was successful:\n[]\u003e If it was, extract the first profiler policy and set output variables\n[]\u003e If it wasn't, return an error\n\nMore information about this API: https://developer.cisco.com/docs/identity-services-engine/3.0/#!profiler-profile/get-all",
      "display_name": "ISE - ERS - Profiler Policy - Get by Name",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01N7Z3UBPJJ9L123aL6gQ2keV4NZbZrcGez",
        "name": "HTTP Request",
        "title": "Fetch profiler policy",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "content_type": "application/json",
          "continue_on_error_status_code": true,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "ERS-Media-Type",
              "value": "identity.profilerprofile.1.0"
            }
          ],
          "display_name": "Fetch profiler policy",
          "method": "GET",
          "relative_url": "/ers/config/profilerprofile/?filter=name.EQ.$workflow.definition_workflow_01N7Z3TIWI71O7bKVmCXAeyFR6rujDvCT3t.input.variable_workflow_01N7Z3TIQ33HF65BxtFzVheEx4K1RUQPUC8$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01N7Z3UPSQQV23ygEu8jChMfq6NoDirhqN2",
        "name": "Condition Block",
        "title": "Was the request successful?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Was the request successful?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01N7Z3V40SQM93CoFn62nuO6GOsAKnRGJhh",
            "name": "Condition Branch",
            "title": "200/Success",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01N7Z3UBPJJ9L123aL6gQ2keV4NZbZrcGez.output.status_code$",
                "operator": "eq",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "200/Success",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01N7Z3V69YZH34MVYgOrnREkrf0JzVtpAzx",
                "name": "JSONPath Query",
                "title": "Extract result count",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Extract result count",
                  "input_json": "$activity.definition_activity_01N7Z3UBPJJ9L123aL6gQ2keV4NZbZrcGez.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.SearchResult.total",
                      "jsonpath_query_name": "resultCount",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01N7Z661043UA5M5V3m0Q2yDr41uclk22Kw",
                "name": "Condition Block",
                "title": "Were there any results?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Were there any results?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01N7Z66RHW9GQ3wbeDtN5D8cHGlvzEh7sis",
                    "name": "Condition Branch",
                    "title": "No",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01N7Z3V69YZH34MVYgOrnREkrf0JzVtpAzx.output.jsonpath_queries.resultCount$",
                        "operator": "eq",
                        "right_operand": "0"
                      },
                      "continue_on_failure": false,
                      "display_name": "No",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01N7Z6UIUQ8ZX1t6mADAIfP5ZtpxGAGznO1",
                        "name": "Completed",
                        "title": "Not found",
                        "type": "logic.completed",
                        "base_type": "activity",
                        "properties": {
                          "completion_type": "failed-completed",
                          "continue_on_failure": false,
                          "display_name": "Not found",
                          "result_message": "The requested profiler policy was not found",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01N7Z731660N37FwWvWdYf5pWVPHyXWuNVd",
                "name": "JSONPath Query",
                "title": "Extract first result",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Extract first result",
                  "input_json": "$activity.definition_activity_01N7Z3UBPJJ9L123aL6gQ2keV4NZbZrcGez.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": "$.SearchResult.resources[0]",
                      "jsonpath_query_name": "profilerProfile",
                      "jsonpath_query_type": "string"
                    },
                    {
                      "jsonpath_query": "$.SearchResult.resources[0].id",
                      "jsonpath_query_name": "profilerProfileId",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01N7Z3VLTD53O6GL7aXeMCTBBk2Q2MFBmo2",
                "name": "Set Variables",
                "title": "Set output variables",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set output variables",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01N7Z3TIWI71O7bKVmCXAeyFR6rujDvCT3t.output.variable_workflow_01N7Z3TIQ39K71N4TQzCBUOauZDElci4nrY$",
                      "variable_value_new": "$activity.definition_activity_01N7Z731660N37FwWvWdYf5pWVPHyXWuNVd.output.jsonpath_queries.profilerProfile$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01N7Z3TIWI71O7bKVmCXAeyFR6rujDvCT3t.output.variable_workflow_01N7Z3TIQ389V43LHLOSX5DiSh0vIPMP6Nu$",
                      "variable_value_new": "$activity.definition_activity_01N7Z731660N37FwWvWdYf5pWVPHyXWuNVd.output.jsonpath_queries.profilerProfileId$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01N7Z3W0VMWIG2mmjZhgITJJYFouS4GSIsD",
            "name": "Condition Branch",
            "title": "Anything else",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01N7Z3UBPJJ9L123aL6gQ2keV4NZbZrcGez.output.status_code$",
                "operator": "ne",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "Anything else",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01N7Z3W33ODEK0o0tRPG4coKyAwzo2I1U3z",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "result_message": "Failed to fetch the requested profiler policy\n\nStatus code: $activity.definition_activity_01N7Z3UBPJJ9L123aL6gQ2keV4NZbZrcGez.output.status_code$\nResponse body: $activity.definition_activity_01N7Z3UBPJJ9L123aL6gQ2keV4NZbZrcGez.output.response_body$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  }
}