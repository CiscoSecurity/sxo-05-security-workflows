{
	"workflow": {
	  "unique_name": "definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA",
	  "name": "Palo Alto - Panorama - Search Service Objects",
	  "title": "Palo Alto - Panorama - Search Service Objects",
	  "type": "generic.workflow",
	  "base_type": "workflow",
	  "variables": [
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Service Protocol",
			"type": "datatype.string",
			"description": "Protocol to fetch service objects for. Valid values include: tcp, udp",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QWHV53LS3GI2qreYRYx2IigvUdrLoWAu2",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "output",
			"name": "Service Object Name",
			"type": "datatype.string",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QLGLEA278AM2ET5Gg6SqZR7rpMHp69PsW",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Service Source Port",
			"type": "datatype.string",
			"description": "Source port to fetch service objects for",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QXBQ5GPMATI443jNfVF7QICPQK2WSAnir",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "output",
			"name": "Service Object Body",
			"type": "datatype.string",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QWCWO2D8MVO61mKIw9pnbQApCRi56NfMr",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "shared",
			"scope": "input",
			"name": "Location",
			"type": "datatype.string",
			"description": "The availability of the service objects. Valid values include: shared, device-group. If you use device-group, you must provide a Device Group Name",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QLGR1K92IM32zdYGxDHZKLLY6esuswiDP",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.secure_string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "API Key",
			"type": "datatype.secure_string",
			"description": "Your API key for the Panorama REST API. See: https://docs.paloaltonetworks.com/pan-os/10-0/pan-os-panorama-api/get-started-with-the-pan-os-xml-api/get-your-api-key.html",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QLIGKJV0PGQ1vczV3YBjmieI4N7odgLoh",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Service Destination Port",
			"type": "datatype.string",
			"description": "Destination port to fetch service objects for",
			"is_required": true,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QLG7YB3EX1N1sJ7qywmgUhpPDUlhUsOkF",
		  "object_type": "variable_workflow"
		},
		{
		  "schema_id": "datatype.string",
		  "properties": {
			"value": "",
			"scope": "input",
			"name": "Device Group Name",
			"type": "datatype.string",
			"description": "The name of the device group to get service objects for. This is only required when Location is set to device-group",
			"is_required": false,
			"is_invisible": false
		  },
		  "unique_name": "variable_workflow_01QLGQ7HNZUGR6VgnRZlUktXitIfziOBdQF",
		  "object_type": "variable_workflow"
		}
	  ],
	  "properties": {
		"atomic": {
		  "atomic_group": "Palo Alto Panorama",
		  "is_atomic": true
		},
		"delete_workflow_instance": false,
		"description": "Searches for service objects in Palo Alto Panorama.\n\nNote: You may need to use a SecureX Orchestration Remote to communicate with Panorama if it's on-premise. See: https://cs.co/SXO_remote\n\nTarget: HTTP Endpoint for your Panorama instance with a path of \"/restapi/\"\n\nAccount Key: None (uses an API key)\n\nSteps:\n[] Make sure the protocol provided is supported\n[] Search service objects\n[] Check if the request was successful:\n[]> If it wasn't, return an error\n[] Check if the protocol type was correct:\n[]> If it wasn't, return an error\n[] Search object with the input value\n[]> If the search was successful, return object body in JSON format and name\n[]> If there are errors during the search, return errors\n\nMore information about this API: https://<your Panorama>/restapi-doc/#tag/objects-address-groups/paths/~1restapi~1v10.0~1Objects~1Services/get",
		"display_name": "Palo Alto - Panorama - Search Service Objects",
		"runtime_user": {
		  "target_default": true
		},
		"target": {
		  "target_type": "web-service.endpoint",
		  "specify_on_workflow_start": true
		}
	  },
	  "object_type": "definition_workflow",
	  "actions": [
		{
		  "unique_name": "definition_activity_01S0FRFEFQ5Q46rzIPZjTlPYYeNgBTiL3om",
		  "name": "To Lower",
		  "title": "Protocol to lower case",
		  "type": "core.string2lower",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Protocol to lower case",
			"skip_execution": false,
			"source": "$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.input.variable_workflow_01QWHV53LS3GI2qreYRYx2IigvUdrLoWAu2$"
		  },
		  "object_type": "definition_activity"
		},
		{
		  "unique_name": "definition_activity_01S0FS0DSAZ5I0lNpgtz4gyljlJtPZI25WV",
		  "name": "Condition Block",
		  "title": "Is the protocol supported?",
		  "type": "logic.if_else",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Is the protocol supported?",
			"skip_execution": false
		  },
		  "object_type": "definition_activity",
		  "blocks": [
			{
			  "unique_name": "definition_activity_01S0FS0E05QSK6HsQR1bajwicKgVPWfInoI",
			  "name": "Condition Branch",
			  "title": "No",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": {
					"left_operand": "$activity.definition_activity_01S0FRFEFQ5Q46rzIPZjTlPYYeNgBTiL3om.output.lowercase_text$",
					"operator": "ne",
					"right_operand": "tcp"
				  },
				  "operator": "and",
				  "right_operand": {
					"left_operand": "$activity.definition_activity_01S0FRFEFQ5Q46rzIPZjTlPYYeNgBTiL3om.output.lowercase_text$",
					"operator": "ne",
					"right_operand": "udp"
				  }
				},
				"continue_on_failure": false,
				"display_name": "No",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01QXDIP5WMLJA3FjrqCMx29l0h3WsO8CrVs",
				  "name": "Completed",
				  "title": "Failed",
				  "type": "logic.completed",
				  "base_type": "activity",
				  "properties": {
					"completion_type": "failed-completed",
					"continue_on_failure": false,
					"display_name": "Failed",
					"result_message": "Invalid protocol provided. Must be tcp or udp",
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				}
			  ]
			}
		  ]
		},
		{
		  "unique_name": "definition_activity_01QLGT4IM5UVJ4ap4oZTligA466kgxS7lAB",
		  "name": "HTTP Request",
		  "title": "Fetch service objects",
		  "type": "web-service.http_request",
		  "base_type": "activity",
		  "properties": {
			"accept": "application/json",
			"action_timeout": 180,
			"allow_auto_redirect": true,
			"continue_on_error_status_code": true,
			"continue_on_failure": false,
			"custom_headers": [
			  {
				"name": "X-PAN-KEY",
				"value": "$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.input.variable_workflow_01QLIGKJV0PGQ1vczV3YBjmieI4N7odgLoh$"
			  }
			],
			"display_name": "Fetch service objects",
			"method": "GET",
			"relative_url": "v10.0/Objects/Services?location=$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.input.variable_workflow_01QLGR1K92IM32zdYGxDHZKLLY6esuswiDP$&device-group=$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.input.variable_workflow_01QLGQ7HNZUGR6VgnRZlUktXitIfziOBdQF$",
			"runtime_user": {
			  "target_default": true
			},
			"skip_execution": false,
			"target": {
			  "use_workflow_target": true
			}
		  },
		  "object_type": "definition_activity"
		},
		{
		  "unique_name": "definition_activity_01QLHF5CKO8797NDRbIqkThZu20MzZnnco1",
		  "name": "Condition Block",
		  "title": "Was the request successful?",
		  "type": "logic.if_else",
		  "base_type": "activity",
		  "properties": {
			"continue_on_failure": false,
			"display_name": "Was the request successful?",
			"skip_execution": false
		  },
		  "object_type": "definition_activity",
		  "blocks": [
			{
			  "unique_name": "definition_activity_01QLHF5EBLWSU20enXNKlOvaqhnGzlcPkzv",
			  "name": "Condition Branch",
			  "title": "200/Success",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": "$activity.definition_activity_01QLGT4IM5UVJ4ap4oZTligA466kgxS7lAB.output.status_code$",
				  "operator": "eq",
				  "right_operand": 200
				},
				"continue_on_failure": false,
				"display_name": "200/Success",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01QWFMBFUFURT6H1wtsY2TrsFttJLwYy5NZ",
				  "name": "Execute Python Script",
				  "title": "Extract matching service objects",
				  "type": "python3.script",
				  "base_type": "activity",
				  "properties": {
					"action_timeout": 180,
					"continue_on_failure": true,
					"display_name": "Extract matching service objects",
					"script": "import sys\nimport json\nobjects = json.loads(sys.argv[1])['result'].get('entry', [])\nport = sys.argv[2]\nprotocol = sys.argv[3].lower()\ns_port = sys.argv[4]\nobject_name, object_body = '', ''\nfor obj in objects:\n    path = obj['protocol'].get(protocol)\n    if not path:\n        continue\n    obj_port = path['port']\n    obj_s_port = path.get('source-port', '')\n    if obj_port == port and obj_s_port == s_port:\n        object_name = obj['@name']\n        object_body = json.dumps(obj)\n        break",
					"script_arguments": [
					  "$activity.definition_activity_01QLGT4IM5UVJ4ap4oZTligA466kgxS7lAB.output.response_body$",
					  "$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.input.variable_workflow_01QLG7YB3EX1N1sJ7qywmgUhpPDUlhUsOkF$",
					  "$activity.definition_activity_01S0FRFEFQ5Q46rzIPZjTlPYYeNgBTiL3om.output.lowercase_text$",
					  "$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.input.variable_workflow_01QXBQ5GPMATI443jNfVF7QICPQK2WSAnir$"
					],
					"script_queries": [
					  {
						"script_query": "object_name",
						"script_query_name": "Object Name",
						"script_query_type": "string"
					  },
					  {
						"script_query": "object_body",
						"script_query_name": "Object Body",
						"script_query_type": "string"
					  }
					],
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				},
				{
				  "unique_name": "definition_activity_01QWNIXASF6GO4CoTc6WMsnaCdV96k0g7PY",
				  "name": "Condition Block",
				  "title": "Search executed successfully?",
				  "type": "logic.if_else",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Search executed successfully?",
					"skip_execution": false
				  },
				  "object_type": "definition_activity",
				  "blocks": [
					{
					  "unique_name": "definition_activity_01QWNIXCIMFC90dYmc8UJWX5icQfFEPiIOc",
					  "name": "Condition Branch",
					  "title": "No",
					  "type": "logic.condition_block",
					  "base_type": "activity",
					  "properties": {
						"condition": {
						  "left_operand": "$activity.definition_activity_01QWFMBFUFURT6H1wtsY2TrsFttJLwYy5NZ.output.succeeded$",
						  "operator": "eq",
						  "right_operand": false
						},
						"continue_on_failure": false,
						"display_name": "No",
						"skip_execution": false
					  },
					  "object_type": "definition_activity",
					  "actions": [
						{
						  "unique_name": "definition_activity_01QWNKJLA313Q2rsQKUNnGuX7gc6jXQ58RH",
						  "name": "Completed",
						  "title": "Failed",
						  "type": "logic.completed",
						  "base_type": "activity",
						  "properties": {
							"completion_type": "failed-completed",
							"continue_on_failure": false,
							"display_name": "Failed",
							"result_message": "Failed to extract service object from search results",
							"skip_execution": false
						  },
						  "object_type": "definition_activity"
						}
					  ]
					}
				  ]
				},
				{
				  "unique_name": "definition_activity_01QWNM856D1F30EJoebtXhTM0W7xtJHEkkW",
				  "name": "Set Variables",
				  "title": "Set output variables",
				  "type": "core.set_multiple_variables",
				  "base_type": "activity",
				  "properties": {
					"continue_on_failure": false,
					"display_name": "Set output variables",
					"skip_execution": false,
					"variables_to_update": [
					  {
						"variable_to_update": "$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.output.variable_workflow_01QWCWO2D8MVO61mKIw9pnbQApCRi56NfMr$",
						"variable_value_new": "$activity.definition_activity_01QWFMBFUFURT6H1wtsY2TrsFttJLwYy5NZ.output.script_queries.Object Body$"
					  },
					  {
						"variable_to_update": "$workflow.definition_workflow_01QLG27DV5HSE4B2bVtyZub0wi5XOdD6ccA.output.variable_workflow_01QLGLEA278AM2ET5Gg6SqZR7rpMHp69PsW$",
						"variable_value_new": "$activity.definition_activity_01QWFMBFUFURT6H1wtsY2TrsFttJLwYy5NZ.output.script_queries.Object Name$"
					  }
					]
				  },
				  "object_type": "definition_activity"
				}
			  ]
			},
			{
			  "unique_name": "definition_activity_01QLHF5EVAXH73ClEb4kEPBoitbm873HcbX",
			  "name": "Condition Branch",
			  "title": "Anything else",
			  "type": "logic.condition_block",
			  "base_type": "activity",
			  "properties": {
				"condition": {
				  "left_operand": "$activity.definition_activity_01QLGT4IM5UVJ4ap4oZTligA466kgxS7lAB.output.status_code$",
				  "operator": "ne",
				  "right_operand": 200
				},
				"continue_on_failure": false,
				"display_name": "Anything else",
				"skip_execution": false
			  },
			  "object_type": "definition_activity",
			  "actions": [
				{
				  "unique_name": "definition_activity_01QLHIG2P6BJC0RG1UM5d2dtHTxMn8x7Nqq",
				  "name": "Completed",
				  "title": "Failed",
				  "type": "logic.completed",
				  "base_type": "activity",
				  "properties": {
					"completion_type": "failed-completed",
					"continue_on_failure": false,
					"display_name": "Failed",
					"result_message": "Failed to search for service objects\n\nStatus code: $activity.definition_activity_01QLGT4IM5UVJ4ap4oZTligA466kgxS7lAB.output.status_code$\nResponse body: $activity.definition_activity_01QLGT4IM5UVJ4ap4oZTligA466kgxS7lAB.output.response_body$",
					"skip_execution": false
				  },
				  "object_type": "definition_activity"
				}
			  ]
			}
		  ]
		}
	  ],
	  "categories": [
		"category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
	  ]
	}
  }