{
  "workflow": {
    "unique_name": "definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV",
    "name": "Fortinet - FortiGate - Add Address to Address Group",
    "title": "Fortinet - FortiGate - Add Address to Address Group",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "API Response",
          "type": "datatype.string",
          "description": "Raw response from the FortiGate API",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QKJSE0EFP9E1b1x3izFaRnpmmFTUoXHcy",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Access Token",
          "type": "datatype.secure_string",
          "description": "Access token for the FortiGate API. This can be generated by creating a new REST API Admin under System > Administrators",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QKJSE0EFJ2W31BeDVMJrs1CFizp43DKQr",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "root",
          "scope": "input",
          "name": "VDOM",
          "type": "datatype.string",
          "description": "The virtual domain (VDOM) to query. Sample values:\nroot (Single VDOM)\nvdom1,vdom2 (Multiple VDOMs)\n* (All VDOMs)",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QKM1ZUG7X301PG75jm0VEKR1SrG6holTq",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Address Name",
          "type": "datatype.string",
          "description": "Name of the address object to add to the group",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QKJSE0EFMPQ4ZousJqguiEM0z7cVkN0z4",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Address Group Name",
          "type": "datatype.string",
          "description": "Name of the address group to update",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QKJSE0EFQL61FRB1WLGyXTIRetH2ohsE4",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Fortinet FortiGate",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "Adds an address to an address group and returns the API response if successful.\n\nNote: You may need to use a SecureX Orchestration Remote to communicate with FortiGate Firewall if it's on-premise. See: https://cs.co/SXO_remote\n\nTarget: HTTP Endpoint for your FortiGate instance with a path of \"api/\"\n\nAccount Key: None (uses an access token)\n\nSteps:\n[] Fetch the address group\n[] Check if the request was successful:\n[]> If it wasn't, return an error\n[]> If it was:\n[]>> Extract the address group JSON\n[]>> Check if the address is already in the group (if it is, set the output variable and end the workflow)\n[]>> Request the address group be updated\n[]>> Check if the request was successful:\n[]>>> If it was, set the output variable\n[]> >>If it wasn't, return an error\n\nMore information about this API: https://fndn.fortinet.net/index.php?/fortiapi/1-fortios/1018/1/firewall",
      "display_name": "Fortinet - FortiGate - Add Address to Address Group",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01QKJSEBE65CW4CzUnC2pTQGJFvdu8UARfF",
        "name": "HTTP Request",
        "title": "Get address group",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "continue_on_error_status_code": true,
          "continue_on_failure": false,
          "display_name": "Get address group",
          "method": "GET",
          "relative_url": "/v2/cmdb/firewall/addrgrp/$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.input.variable_workflow_01QKJSE0EFQL61FRB1WLGyXTIRetH2ohsE4$?access_token=$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.input.variable_workflow_01QKJSE0EFJ2W31BeDVMJrs1CFizp43DKQr$&vdom=$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.input.variable_workflow_01QKM1ZUG7X301PG75jm0VEKR1SrG6holTq$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01QKK3K4VNQFY6pswZ2WlpgQzW1pyXX2Uuy",
        "name": "Condition Block",
        "title": "Was the request successful?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Was the request successful?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01QKK3KBKU3ZV4xniaao1kqGG3HSgEMIWMu",
            "name": "Condition Branch",
            "title": "200/Success",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01QKJSEBE65CW4CzUnC2pTQGJFvdu8UARfF.output.status_code$",
                "operator": "eq",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "200/Success",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01QKK685NW5SY0hYNJHlPfxhr5rrYmyb2W1",
                "name": "JSONPath Query",
                "title": "Extract address group JSON",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Extract address group JSON",
                  "input_json": "$activity.definition_activity_01QKJSEBE65CW4CzUnC2pTQGJFvdu8UARfF.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": ".results[0]",
                      "jsonpath_query_name": "Group JSON",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01QKK6IJZPPHP5XnD39EAoAWmV73nsQ8GHK",
                "name": "Condition Block",
                "title": "Extraction successful?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Extraction successful?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01QKK6IQ9FTEU1zhKJhSttkOcQ5FgkMYoZU",
                    "name": "Condition Branch",
                    "title": "No",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01QKK685NW5SY0hYNJHlPfxhr5rrYmyb2W1.output.succeeded$",
                        "operator": "eq",
                        "right_operand": false
                      },
                      "continue_on_failure": false,
                      "display_name": "No",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01QKK6IQZE90G4RgFn1eELYLREvcGS4dZ6e",
                        "name": "Completed",
                        "title": "Failed",
                        "type": "logic.completed",
                        "base_type": "activity",
                        "properties": {
                          "completion_type": "failed-completed",
                          "continue_on_failure": false,
                          "display_name": "Failed",
                          "result_message": "Failed to fetch the address group provided",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01QKKI5MZXP5E78TZoRXSxxElnoBtQTjy6r",
                "name": "Execute Python Script",
                "title": "Update address group JSON",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Update address group JSON",
                  "script": "from sys import argv\nimport json\ngroup_json = json.loads(argv[1])\nmember_already_in_group = True\nadress_name = argv[2]\nmembers = group_json[\"member\"]\nif not any(d['name'] == adress_name for d in members):\n    member_already_in_group = False\n    members.append({'name': adress_name})\n    group_json[\"member\"] = members\ngroup_json = json.dumps(group_json)",
                  "script_arguments": [
                    "$activity.definition_activity_01QKK685NW5SY0hYNJHlPfxhr5rrYmyb2W1.output.jsonpath_queries.Group JSON$",
                    "$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.input.variable_workflow_01QKJSE0EFMPQ4ZousJqguiEM0z7cVkN0z4$"
                  ],
                  "script_queries": [
                    {
                      "script_query": "group_json",
                      "script_query_name": "Group JSON",
                      "script_query_type": "string"
                    },
                    {
                      "script_query": "member_already_in_group",
                      "script_query_name": "Member Already In Group",
                      "script_query_type": "boolean"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01QKKZ9S9ZJB02P9janVWFblUHcCZR5aLO9",
                "name": "Condition Block",
                "title": "Is the address already in the group?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Is the address already in the group?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01QKKZ9YMRING6nlrkWFuwFDCyqA7MvX3ZS",
                    "name": "Condition Branch",
                    "title": "Yes",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01QKKI5MZXP5E78TZoRXSxxElnoBtQTjy6r.output.script_queries.Member Already In Group$",
                        "operator": "eq",
                        "right_operand": "true"
                      },
                      "continue_on_failure": false,
                      "display_name": "Yes",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01QKLRAGC26IC5WIljdcR3Gx8DmbgujueL0",
                        "name": "Set Variables",
                        "title": "Set output variable",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set output variable",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.output.variable_workflow_01QKJSE0EFP9E1b1x3izFaRnpmmFTUoXHcy$",
                              "variable_value_new": "$activity.definition_activity_01QKJSEBE65CW4CzUnC2pTQGJFvdu8UARfF.output.response_body$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      },
                      {
                        "unique_name": "definition_activity_01QKL02FI0Q6V7KiKPxDFtPPKEgTKaEvUbA",
                        "name": "Completed",
                        "title": "Completed",
                        "type": "logic.completed",
                        "base_type": "activity",
                        "properties": {
                          "completion_type": "succeeded",
                          "continue_on_failure": false,
                          "display_name": "Completed",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01QKJZGZL0KGH5fXTS2qVd21LzqbDRSwJB5",
                "name": "HTTP Request",
                "title": "Update address group",
                "type": "web-service.http_request",
                "base_type": "activity",
                "properties": {
                  "accept": "application/json",
                  "action_timeout": 180,
                  "allow_auto_redirect": true,
                  "body": "$activity.definition_activity_01QKKI5MZXP5E78TZoRXSxxElnoBtQTjy6r.output.script_queries.Group JSON$",
                  "content_type": "application/json",
                  "continue_on_error_status_code": true,
                  "continue_on_failure": false,
                  "display_name": "Update address group",
                  "method": "PUT",
                  "relative_url": "/v2/cmdb/firewall/addrgrp/$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.input.variable_workflow_01QKJSE0EFQL61FRB1WLGyXTIRetH2ohsE4$?access_token=$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.input.variable_workflow_01QKJSE0EFJ2W31BeDVMJrs1CFizp43DKQr$&vdom=$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.input.variable_workflow_01QKM1ZUG7X301PG75jm0VEKR1SrG6holTq$",
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "use_workflow_target": true
                  }
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01QKJZL7GZ0JJ1QlwLYAbKpqDLfv0nhO62s",
                "name": "Condition Block",
                "title": "Was the request successful?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Was the request successful?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01QKJZLG5RMQ13D6U99xNxzY8tb4Z5t6CZ2",
                    "name": "Condition Branch",
                    "title": "200/Success",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01QKJZGZL0KGH5fXTS2qVd21LzqbDRSwJB5.output.status_code$",
                        "operator": "eq",
                        "right_operand": 200
                      },
                      "continue_on_failure": false,
                      "display_name": "200/Success",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01QKJZLUVGWG60VySMzbnh8L7X6EsEhLyuq",
                        "name": "Set Variables",
                        "title": "Set output variable",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Set output variable",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01QKJSE0LURMP1XIO79isiyUAXKTDDZeCGV.output.variable_workflow_01QKJSE0EFP9E1b1x3izFaRnpmmFTUoXHcy$",
                              "variable_value_new": "$activity.definition_activity_01QKJZGZL0KGH5fXTS2qVd21LzqbDRSwJB5.output.response_body$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01QKJZLZDVY1E5M69Q4ZaLrnVN9gH76EC9z",
                    "name": "Condition Branch",
                    "title": "Anything else",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01QKJZGZL0KGH5fXTS2qVd21LzqbDRSwJB5.output.status_code$",
                        "operator": "ne",
                        "right_operand": 200
                      },
                      "continue_on_failure": false,
                      "display_name": "Anything else",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01QKJZM069CPG2tCL4AOgubpxcX7S63Ud5E",
                        "name": "Completed",
                        "title": "Failed",
                        "type": "logic.completed",
                        "base_type": "activity",
                        "properties": {
                          "completion_type": "failed-completed",
                          "continue_on_failure": false,
                          "display_name": "Failed",
                          "result_message": "Failed to add address to address group\n\nStatus code: $activity.definition_activity_01QKJZGZL0KGH5fXTS2qVd21LzqbDRSwJB5.output.status_code$\nResponse body: $activity.definition_activity_01QKJZGZL0KGH5fXTS2qVd21LzqbDRSwJB5.output.response_body$",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_01QKK3KCA6WLN4KjpLhbtBUmaFBA4NuJSJx",
            "name": "Condition Branch",
            "title": "Anything else",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01QKJSEBE65CW4CzUnC2pTQGJFvdu8UARfF.output.status_code$",
                "operator": "ne",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "Anything else",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01QKK3QD0UH5Z7W1FWJEP6FfLg6u7ibUHvg",
                "name": "Completed",
                "title": "Completed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Completed",
                  "result_message": "Failed to fetch the address group\n\nStatus code: $activity.definition_activity_01QKJSEBE65CW4CzUnC2pTQGJFvdu8UARfF.output.status_code$\nResponse body: $activity.definition_activity_01QKJSEBE65CW4CzUnC2pTQGJFvdu8UARfF.output.response_body$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  }
}