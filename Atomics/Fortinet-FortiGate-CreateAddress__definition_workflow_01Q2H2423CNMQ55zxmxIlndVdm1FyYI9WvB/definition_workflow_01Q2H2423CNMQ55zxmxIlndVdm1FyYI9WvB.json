{
  "workflow": {
    "unique_name": "definition_workflow_01Q2H2423CNMQ55zxmxIlndVdm1FyYI9WvB",
    "name": "Fortinet - FortiGate - Create Address",
    "title": "Fortinet - FortiGate - Create Address",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "MKey",
          "type": "datatype.string",
          "description": "MKey of the new address object",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QC9LIOV6YU17SrgFzUqifOESxFzg5ss7d",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Address Type",
          "type": "datatype.string",
          "description": "The type of address object to create. Supported types include: ip, domain, mac_address",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01Q8Q3G8HFBBV4bCgPNxr8tNZAdaRIhTchP",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "root",
          "scope": "input",
          "name": "VDOM",
          "type": "datatype.string",
          "description": "The virtual domain (VDOM) to query. Sample values:\nroot (Single VDOM)\nvdom1,vdom2 (Multiple VDOMs)\n* (All VDOMs)",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QYE15IBF6Q74dRiYe9StNFoRQ1cIEul1M",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Access Token",
          "type": "datatype.secure_string",
          "description": "Access token for the FortiGate API. This can be generated by creating a new REST API Admin under System > Administrators",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QCRJI0NZEMB0Pm8zeCVQJSI6QGrjOyakn",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "API Response",
          "type": "datatype.string",
          "description": "Raw response from the FortiGate API",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01Q8RRJ0WOJNN1zvos0ZSiibUzvIjJ99lFf",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Address Name",
          "type": "datatype.string",
          "description": "Name of the address object. Maximum length is 79 characters",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01QYDQME2SLKW7lJPgDsK0aMFMMODvnejqs",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "Address Value",
          "type": "datatype.string",
          "description": "The value of the address object",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01Q8QAOJCFJFX2aDEaoWMl8JIaBJeUoywL6",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Fortinet FortiGate",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "Creates an address object and returns the API response and address MKey if successful. Supported address types include: ip, domain, mac_address\n\nNote: You may need to use a SecureX orchestration remote to communicate with FortiGate Firewall if it's on-premises. See: https://cs.co/SXO_remote\n\nTarget: HTTP Endpoint for your FortiGate instance with a path of \"api/\"\n\nAccount Key: None (uses an access token)\n\nSteps:\n[] Generate the JSON for the address object\n[] Check if the JSON was created:\n[]> If it wasn't, return an error\n[] Request the object be created\n[] Check if the request was successful:\n[]> If it was, extract the MKey and set the output variables\n[]> If it wasn't, return an error\n\nMore information about this API: https://fndn.fortinet.net/index.php?/fortiapi/1-fortios/1018/1/firewall/",
      "display_name": "Fortinet - FortiGate - Create Address",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01Q2JQFORYRBM25EJMkMxe8DCV74t0UVdT3",
        "name": "Execute Python Script",
        "title": "Create address JSON",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Create address JSON",
          "script": "import sys\nimport json\nobservable_type = sys.argv[1].strip()\nobservable_value = sys.argv[2].strip()\naddress_name = sys.argv[3].strip()\nerror = None\naddress_json = {}\nif observable_type == \"ip\":\n    observable_value = f\"{observable_value}/255.255.255.255\"\nmapping = {\n    \"domain\": {\n        \"type\": \"fqdn\"\n    },\n    \"ip\": {\n        \"type\": \"ipmask\",\n        \"type_name\": \"subnet\"\n    },\n    \"mac_address\": {\n        \"type\": \"mac\",\n        \"type_name\": \"macaddr\"\n    }\n}\ntry:\n    fg_type = mapping[observable_type][\"type\"]\n    address_json = {\n        \"name\": address_name,\n        \"type\": fg_type,\n        mapping[observable_type].get(\n            \"type_name\", fg_type\n        ): observable_value\n    }\n    address_json = json.dumps(address_json)\nexcept KeyError as e:\n    error = e",
          "script_arguments": [
            "$workflow.definition_workflow_01Q2H2423CNMQ55zxmxIlndVdm1FyYI9WvB.input.variable_workflow_01Q8Q3G8HFBBV4bCgPNxr8tNZAdaRIhTchP$",
            "$workflow.definition_workflow_01Q2H2423CNMQ55zxmxIlndVdm1FyYI9WvB.input.variable_workflow_01Q8QAOJCFJFX2aDEaoWMl8JIaBJeUoywL6$",
            "$workflow.definition_workflow_01Q2H2423CNMQ55zxmxIlndVdm1FyYI9WvB.input.variable_workflow_01QYDQME2SLKW7lJPgDsK0aMFMMODvnejqs$"
          ],
          "script_queries": [
            {
              "script_query": "address_json",
              "script_query_name": "JSON",
              "script_query_type": "string"
            },
            {
              "script_query": "error",
              "script_query_name": "Error",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01QCOKN28N4F53BKm48d24awAjLsyAfkNtH",
        "name": "Condition Block",
        "title": "Address object JSON created?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Address object JSON created?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01QCOKN9HT5QQ1GMp888laj91xtuB8zK8GP",
            "name": "Condition Branch",
            "title": "No",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01Q2JQFORYRBM25EJMkMxe8DCV74t0UVdT3.output.script_queries.Error$",
                "operator": "ne",
                "right_operand": "None"
              },
              "continue_on_failure": false,
              "display_name": "No",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01QCOKPGYSS3L1jIyGWHKiilUrrCRrj6meW",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "result_message": "There was an error while building the address object's JSON: $activity.definition_activity_01Q2JQFORYRBM25EJMkMxe8DCV74t0UVdT3.output.script_queries.Error$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01Q2JRUR0EJAS1a9snlmep6MpQdvVCDyvKb",
        "name": "HTTP Request",
        "title": "Execute API request",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "accept": "application/json",
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "body": "$activity.definition_activity_01Q2JQFORYRBM25EJMkMxe8DCV74t0UVdT3.output.script_queries.JSON$",
          "content_type": "application/json",
          "continue_on_error_status_code": true,
          "continue_on_failure": false,
          "display_name": "Execute API request",
          "method": "POST",
          "relative_url": "/v2/cmdb/firewall/address?access_token=$workflow.definition_workflow_01Q2H2423CNMQ55zxmxIlndVdm1FyYI9WvB.input.variable_workflow_01QCRJI0NZEMB0Pm8zeCVQJSI6QGrjOyakn$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          }
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01Q2JSGH9YLPF7X9rgGKBLpzTHAhXQDnTFH",
        "name": "Condition Block",
        "title": "Was the request successful?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Was the request successful?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01Q2JSGKWFGUH2zx5EZPEpCFJr725f8z0An",
            "name": "Condition Branch",
            "title": "200/Success",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01Q2JRUR0EJAS1a9snlmep6MpQdvVCDyvKb.output.status_code$",
                "operator": "eq",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "200/Success",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01QC9LW9UB66M20sV11QPsnf7VlsC20L2Mx",
                "name": "JSONPath Query",
                "title": "Extract address MKey",
                "type": "corejava.jsonpathquery",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Extract address MKey",
                  "input_json": "$activity.definition_activity_01Q2JRUR0EJAS1a9snlmep6MpQdvVCDyvKb.output.response_body$",
                  "jsonpath_queries": [
                    {
                      "jsonpath_query": ".mkey",
                      "jsonpath_query_name": "MKey",
                      "jsonpath_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01QCORH59CEHD2TDsNMhnh0LqqWnXwHrd0n",
                "name": "Condition Block",
                "title": "Extraction succeeded?",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Extraction succeeded?",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01QCORHEN9LOH54Hu5GQBDd9tShFTcejFW2",
                    "name": "Condition Branch",
                    "title": "No",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01QC9LW9UB66M20sV11QPsnf7VlsC20L2Mx.output.succeeded$",
                        "operator": "eq",
                        "right_operand": false
                      },
                      "continue_on_failure": false,
                      "display_name": "No",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01QCORSGV81S3788eH01DHfSHx8y4TWCq27",
                        "name": "Completed",
                        "title": "Failed",
                        "type": "logic.completed",
                        "base_type": "activity",
                        "properties": {
                          "completion_type": "failed-completed",
                          "continue_on_failure": false,
                          "display_name": "Failed",
                          "result_message": "Failed to extract the MKey for the new address object",
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01Q8RR7ZHW4VC4tRdTRl04xBOa7ZQRG7fNA",
                "name": "Set Variables",
                "title": "Set output variables",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set output variables",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01Q2H2423CNMQ55zxmxIlndVdm1FyYI9WvB.output.variable_workflow_01Q8RRJ0WOJNN1zvos0ZSiibUzvIjJ99lFf$",
                      "variable_value_new": "$activity.definition_activity_01Q2JRUR0EJAS1a9snlmep6MpQdvVCDyvKb.output.response_body$"
                    },
                    {
                      "variable_to_update": "$workflow.definition_workflow_01Q2H2423CNMQ55zxmxIlndVdm1FyYI9WvB.output.variable_workflow_01QC9LIOV6YU17SrgFzUqifOESxFzg5ss7d$",
                      "variable_value_new": "$activity.definition_activity_01QC9LW9UB66M20sV11QPsnf7VlsC20L2Mx.output.jsonpath_queries.MKey$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01Q2JSGLRDN6K7d8mEpO8BptUt76C7xgE16",
            "name": "Condition Branch",
            "title": "Anything else",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01Q2JRUR0EJAS1a9snlmep6MpQdvVCDyvKb.output.status_code$",
                "operator": "ne",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "Anything else",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01Q2JTG26V0486tkc6Wz2eoH0EYW2tzLMHX",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "result_message": "Failed to create the address object\n\nStatus code: $activity.definition_activity_01Q2JRUR0EJAS1a9snlmep6MpQdvVCDyvKb.output.status_code$\nResponse body: $activity.definition_activity_01Q2JRUR0EJAS1a9snlmep6MpQdvVCDyvKb.output.response_body$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  }
}