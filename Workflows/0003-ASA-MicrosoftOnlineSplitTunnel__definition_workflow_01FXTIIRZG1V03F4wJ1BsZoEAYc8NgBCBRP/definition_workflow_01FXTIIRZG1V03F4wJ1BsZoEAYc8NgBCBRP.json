{
  "workflow": {
    "unique_name": "definition_workflow_01FXTIIRZG1V03F4wJ1BsZoEAYc8NgBCBRP",
    "name": "0003 - Cisco ASA - Microsoft Online Split Tunnel",
    "title": "0003 - Cisco ASA - Microsoft Online Split Tunnel",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "https://endpoints.office.com/endpoints/worldwide?clientrequestid=GUID-HERE",
          "scope": "local",
          "name": "Microsoft Endpoints URL",
          "type": "datatype.string",
          "description": "URL of the Microsoft endpoints JSON. This URL must have a unique GUID appended to it! To get your unique URL, go to https://docs.microsoft.com/en-us/microsoft-365/enterprise/microsoft-365-ip-web-service?view=o365-worldwide, click on the link on the second bullet, and copy the URL",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01FXTK70SBYKN4SjAZn4gjAfzlhPkSh7DcB",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "MICROSOFT-EXCLUDE-DOMAINS",
          "scope": "local",
          "name": "AnyConnect Exclude Domain Group Name",
          "type": "datatype.string",
          "description": "Name of the group to configure for \"anyconnect-custom-data dynamic-split-exclude-domains\"",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01JGM2R4UT4GW7BPOsNKZ63naa5qgRda7RO",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "MICROSOFT-EXCLUDE-IP",
          "scope": "local",
          "name": "Network Object Group Name",
          "type": "datatype.string",
          "description": "Name for the \"object-group network\" configured on the ASA",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01JGM4YUFPHLO7iNtL1YHhr9vjiqJWPtmWh",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "Microsoft provides a JSON-formatted feed of their networks and domains for their various cloud services. This workflow demonstrates fetching that JSON, converting it into split-tunneling commands for Cisco Adaptive Security Appliance (ASA), and then executing those commands on an ASA.\n\nTarget: Terminal Endpoint for your ASA provided on workflow start\n\nAccount Key: Your ASA target should have a Terminal account key\n\nSteps:\n[] Fetch the online services information JSON from Microsoft\n[] Use Python to parse the JSON into ASA commands\n[] SSH to an Adaptive Security Appliance and execute the commands\n\nMore information: https://ciscosecurity.github.io/sxo-05-security-workflows/workflows/0003",
      "display_name": "0003 - Cisco ASA - Microsoft Online Split Tunnel",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "target_type": "terminal.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01FXTITMQQCB01VceTTBiGuiu95fy27HJ85",
        "name": "Execute Python Script",
        "title": "Get and parse JSON from Microsoft",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Get and parse JSON from Microsoft",
          "script": "import sys,json,requests\n\nexcludeDomainGroupName = sys.argv[2]\n\n# function to convert CIDR subnet masks to dotted netmasks\ndef cidr_to_netmask(cidr):\n\tcidr = int(cidr)\n\tmask = (0xffffffff >> (32 - cidr)) << (32 - cidr)\n\t\n\treturn (str( (0xff000000 & mask) >> 24)   + '.' + str( (0x00ff0000 & mask) >> 16)   + '.' + str( (0x0000ff00 & mask) >> 8)    + '.' + str( (0x000000ff & mask)))\n\n# get the list of IPs and URLs\ncontent = requests.request(\"GET\", sys.argv[1])\ncontent = content.text\n\n# did we get the content?\nif len(content) == 0:\n\tprint('No input provided')\n\texit\n\n# parse the JSON\nnetworks = json.loads(content)\n\n# placeholders\nsubnetsV4 = []\nsubnetsV6 = []\nurls = []\n\n# parse each service and get its IPs/URLs\nfor service in networks:\n\tif not service['required']: continue\n\n\tif 'ips' in service:\n\t\tfor ip in service['ips']:\n\t\t\t# is this IPv6?\n\t\t\tif ip.find(':') != -1:\n\t\t\t\tsubnetsV6.append(ip)\n\t\t\telse:\n\t\t\t\tsubnetsV4.append(ip)\n\t\n\tif 'urls' in service:\n\t\tfor url in service['urls']:\n\t\t\t# does this URL start with an asterisk?\n\t\t\tif url[0:1] == '*':\n\t\t\t\turl = url[(url.find('.') + 1):]\n\t\t\t\n\t\t\t# are there more than 2 URL components?\n\t\t\turlParts = url.rsplit('.', 3)\n\t\t\t\n\t\t\t# trim down to the TLD (this assumes no international domain names like \"something.co.uk\")\n\t\t\tif(len(urlParts) < 3):\n\t\t\t\turl = \".\".join(urlParts)\n\t\t\telse:\n\t\t\t\turl = \".\".join(urlParts[(len(urlParts) - 2):])\n\t\t\t\n\t\t\turls.append(url) \n\n# remove duplicates\nsubnetsV4 = list(dict.fromkeys(subnetsV4))\nsubnetsV6 = list(dict.fromkeys(subnetsV6))\nurls = list(dict.fromkeys(urls))\n\n# convert the IPv4 CIDR notation to subnet masks\nfor i, subnet in enumerate(subnetsV4):\n\tipOnly = subnet[0:subnet.find('/')]\n\tmaskOnly = subnet[subnet.find('/') + 1:]\n\tsubnetsV4[i] = ipOnly + ' ' + cidr_to_netmask(maskOnly)\n\n# build the object group commands for the subnets\nipObjectGroup = \"\"\n\nfor subnet in subnetsV4:\n\tipObjectGroup = ipObjectGroup + \"network-object \" + subnet + \"\\n\"\n\nfor subnet in subnetsV6:\n\tipObjectGroup = ipObjectGroup + \"network-object \" + subnet + \"\\n\"\n\n# build the domain commands for the URLs\nlineCount = 0\nexcludeDomains = \"anyconnect-custom-data dynamic-split-exclude-domains \" + excludeDomainGroupName + \" \"\n\nfor url in urls:\n\t# if there are already 5 domains on this line, start a new line\n\tif lineCount == 5:\n\t\texcludeDomains = excludeDomains + \"\\nanyconnect-custom-data dynamic-split-exclude-domains \" + excludeDomainGroupName + \" \"\n\t\tlineCount = 0\n\n\t# if this isn't the first URL on this line, insert a comma\n\tif lineCount > 0:\n\t\texcludeDomains = excludeDomains + \", \"\n\t\n\texcludeDomains = excludeDomains + url\n\n\tlineCount = lineCount + 1\n\nexcludeDomains = excludeDomains + \"\\n\"",
          "script_arguments": [
            "$workflow.definition_workflow_01FXTIIRZG1V03F4wJ1BsZoEAYc8NgBCBRP.local.variable_workflow_01FXTK70SBYKN4SjAZn4gjAfzlhPkSh7DcB$",
            "$workflow.definition_workflow_01FXTIIRZG1V03F4wJ1BsZoEAYc8NgBCBRP.local.variable_workflow_01JGM2R4UT4GW7BPOsNKZ63naa5qgRda7RO$"
          ],
          "script_queries": [
            {
              "script_query": "ipObjectGroup",
              "script_query_name": "ipObjectGroup",
              "script_query_type": "string"
            },
            {
              "script_query": "excludeDomains",
              "script_query_name": "excludeDomains",
              "script_query_type": "string"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01FXTKRIJUE3E4hiruLZFOnZo1m4a4cYWW1",
        "name": "Execute Terminal Command(s)",
        "title": "Execute commands on ASA",
        "type": "terminal.command",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "command_timeout": 60,
          "commands": "enable\nconf t\n!\n$activity.definition_activity_01FXTITMQQCB01VceTTBiGuiu95fy27HJ85.output.script_queries.excludeDomains$\n!\nobject-group network $workflow.definition_workflow_01FXTIIRZG1V03F4wJ1BsZoEAYc8NgBCBRP.local.variable_workflow_01JGM4YUFPHLO7iNtL1YHhr9vjiqJWPtmWh$\n!\n$activity.definition_activity_01FXTITMQQCB01VceTTBiGuiu95fy27HJ85.output.script_queries.ipObjectGroup$\n!\nend\n",
          "continue_on_failure": false,
          "display_name": "Execute commands on ASA",
          "merge_commands": false,
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": false,
            "override_workflow_target_group_criteria": false,
            "use_workflow_target": true,
            "use_workflow_target_group": false
          }
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  }
}